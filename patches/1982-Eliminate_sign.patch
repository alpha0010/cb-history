Index: plugins/codecompletion/ccoptionsprjdlg.cpp
===================================================================
--- plugins/codecompletion/ccoptionsprjdlg.cpp	(revision 3935)
+++ plugins/codecompletion/ccoptionsprjdlg.cpp	(working copy)
@@ -122,7 +122,7 @@
 {
     wxArrayString newpaths;
     wxListBox* control = XRCCTRL(*this, "lstPaths", wxListBox);
-    for (int i = 0; i < control->GetCount(); ++i)
+    for (unsigned i = 0; i < control->GetCount(); ++i)
     {
         newpaths.Add(control->GetString(i));
     }
Index: plugins/codecompletion/insertclassmethoddlg.cpp
===================================================================
--- plugins/codecompletion/insertclassmethoddlg.cpp	(revision 3935)
+++ plugins/codecompletion/insertclassmethoddlg.cpp	(working copy)
@@ -42,7 +42,7 @@
     wxArrayString array;
     const wxCheckListBox* clb = XRCCTRL(*this, "chklstMethods", wxCheckListBox);
 
-    for (int i = 0; i < clb->GetCount(); ++i)
+    for (unsigned i = 0; i < clb->GetCount(); ++i)
     {
         if (clb->IsChecked(i))
         {
Index: plugins/compilergcc/compileroptionsdlg.cpp
===================================================================
--- plugins/compilergcc/compileroptionsdlg.cpp	(revision 3935)
+++ plugins/compilergcc/compileroptionsdlg.cpp	(working copy)
@@ -857,7 +857,7 @@
 
     // linker options and libs
     wxListBox* lstLibs = XRCCTRL(*this, "lstLibs", wxListBox);
-    for (int i = 0; i < lstLibs->GetCount(); ++i)
+    for (unsigned i = 0; i < lstLibs->GetCount(); ++i)
         m_LinkLibs.Add(lstLibs->GetString(i));
 }
 
@@ -1407,7 +1407,7 @@
     if (!base)
         return;
     wxNotebook* nb = XRCCTRL(*this, "nbDirs", wxNotebook);
-    for (int i = 0; i < control->GetCount(); ++i)
+    for (unsigned i = 0; i < control->GetCount(); ++i)
     {
         switch (nb->GetSelection())
         {
@@ -1505,7 +1505,7 @@
                         wxYES | wxNO | wxICON_QUESTION) == wxID_YES)
     {
         // Unset all variables of lstVars
-        for (int i=0; i<lstVars->GetCount(); i++)
+        for (unsigned i=0; i<lstVars->GetCount(); i++)
         {
             wxString key = lstVars->GetString(i).BeforeFirst(_T('=')).Trim(true);
             if (!key.IsEmpty())
@@ -1618,7 +1618,7 @@
         int compilerIdx = m_CurrentCompilerIdx;
         CompilerFactory::RemoveCompiler(CompilerFactory::GetCompiler(compilerIdx));
         cmb->Delete(compilerIdx);
-        while (compilerIdx >= cmb->GetCount())
+        while (compilerIdx >= signed(cmb->GetCount()))
             --compilerIdx;
         cmb->SetSelection(compilerIdx);
         m_CurrentCompilerIdx = compilerIdx;
@@ -1747,7 +1747,7 @@
                                 : reinterpret_cast<CompileOptionsBase*>(m_pProject->GetBuildTarget(sel));
     if (!base)
         return;
-    for (int i = 0; i < lstLibs->GetCount(); ++i)
+    for (unsigned i = 0; i < lstLibs->GetCount(); ++i)
     {
         base->AddLinkLib(lstLibs->GetString(i));
     }
@@ -1854,7 +1854,7 @@
 void CompilerOptionsDlg::OnMoveLibDownClick(wxSpinEvent& /*event*/)
 {
     wxListBox* lstLibs = XRCCTRL(*this, "lstLibs", wxListBox);
-    if (lstLibs->GetSelection() == lstLibs->GetCount() - 1)
+    if (lstLibs->GetSelection() == signed(lstLibs->GetCount()) - 1)
         return;
     int sel = lstLibs->GetSelection();
     wxString lib = lstLibs->GetStringSelection();
@@ -1880,7 +1880,7 @@
 void CompilerOptionsDlg::OnMoveDirDownClick(wxSpinEvent& /*event*/)
 {
     wxListBox* lst = GetDirsListBox();
-    if (!lst || lst->GetSelection() == lst->GetCount() - 1)
+    if (!lst || lst->GetSelection() == signed(lst->GetCount()) - 1)
         return;
     int sel = lst->GetSelection();
     wxString lib = lst->GetStringSelection();
Index: plugins/debuggergdb/debuggeroptionsprjdlg.cpp
===================================================================
--- plugins/debuggergdb/debuggeroptionsprjdlg.cpp	(revision 3935)
+++ plugins/debuggergdb/debuggeroptionsprjdlg.cpp	(working copy)
@@ -124,7 +124,7 @@
     wxListBox* control = XRCCTRL(*this, "lstSearchDirs", wxListBox);
 
     m_OldPaths.Clear();
-    for (int i = 0; i < control->GetCount(); ++i)
+    for (unsigned i = 0; i < control->GetCount(); ++i)
     {
         m_OldPaths.Add(control->GetString(i));
     }
Index: plugins/debuggergdb/editwatchesdlg.cpp
===================================================================
--- plugins/debuggergdb/editwatchesdlg.cpp	(revision 3935)
+++ plugins/debuggergdb/editwatchesdlg.cpp	(working copy)
@@ -93,7 +93,7 @@
     XRCCTRL(*this, "lstWatches", wxListBox)->Delete(sel);
     m_LastSel = -1;
     FillWatches();
-    sel = sel == XRCCTRL(*this, "lstWatches", wxListBox)->GetCount() - 1 ? sel - 1 : sel;
+    sel = sel == signed(XRCCTRL(*this, "lstWatches", wxListBox)->GetCount()) - 1 ? sel - 1 : sel;
     FillRecord(sel);
 }
 
Index: plugins/scriptedwizard/filepathpanel.cpp
===================================================================
--- plugins/scriptedwizard/filepathpanel.cpp	(revision 3935)
+++ plugins/scriptedwizard/filepathpanel.cpp	(working copy)
@@ -131,14 +131,14 @@
 {
     int selection = -1;
 
-    if (m_Selection > clbTargets->GetCount()-2) // (m_Selection >= clbTargets->GetCount()-1)
+    if (m_Selection > signed(clbTargets->GetCount())-2) // (m_Selection >= clbTargets->GetCount()-1)
     {
         m_Selection = -1; // Reset -> notify about "last item" with -1
         return m_Selection;
     }
 
     // start with next (x+1) or first (-1+1 = 0) item
-    for (selection = m_Selection+1; selection<clbTargets->GetCount(); ++selection)
+    for (selection = m_Selection+1; selection<signed(clbTargets->GetCount()); ++selection)
     {
         if (clbTargets->IsChecked(selection))
             break; // selection found. break for-loop to save item's index
@@ -187,13 +187,13 @@
 
 void FilePathPanel::OnbtnAllClick(wxCommandEvent& event)
 {
-    for (int i=0; i<clbTargets->GetCount(); ++i)
+    for (unsigned i=0; i<clbTargets->GetCount(); ++i)
         clbTargets->Check(i, true);
 }
 
 void FilePathPanel::OnbtnNoneClick(wxCommandEvent& event)
 {
-    for (int i=0; i<clbTargets->GetCount(); ++i)
+    for (unsigned i=0; i<clbTargets->GetCount(); ++i)
         clbTargets->Check(i, false);
 }
 
Index: plugins/todo/addtododlg.cpp
===================================================================
--- plugins/todo/addtododlg.cpp	(revision 3935)
+++ plugins/todo/addtododlg.cpp	(working copy)
@@ -99,7 +99,7 @@
 	wxChoice* cmb = XRCCTRL(*this, "chcUser", wxChoice);
 	wxArrayString users;
 
-	for (int i = 0; i < cmb->GetCount(); ++i)
+	for (unsigned i = 0; i < cmb->GetCount(); ++i)
 	{
 		users.Add(cmb->GetString(i));
 	}
@@ -152,7 +152,7 @@
         m_Types.Clear();
         if (cmb->FindString(cmb->GetStringSelection()) == wxNOT_FOUND)
             m_Types.Add(cmb->GetStringSelection());
-        for (int i = 0; i < cmb->GetCount(); ++i)
+        for (unsigned i = 0; i < cmb->GetCount(); ++i)
         {
             m_Types.Add(cmb->GetString(i));
         }
Index: sdk/configuretoolsdlg.cpp
===================================================================
--- sdk/configuretoolsdlg.cpp	(revision 3935)
+++ sdk/configuretoolsdlg.cpp	(working copy)
@@ -93,7 +93,7 @@
 	const wxListBox* list = XRCCTRL(*this, "lstTools", wxListBox);
 	bool hasSel = list->GetSelection() != -1;
 	bool notFirst = list->GetSelection() > 0;
-	bool notLast = (list->GetSelection() < list->GetCount() -1) && hasSel;
+	bool notLast = (list->GetSelection() < signed(list->GetCount()) -1) && hasSel;
 	bool notSeparator = true;
 
 	if(hasSel)
Index: sdk/editarrayfiledlg.cpp
===================================================================
--- sdk/editarrayfiledlg.cpp	(revision 3935)
+++ sdk/editarrayfiledlg.cpp	(working copy)
@@ -67,7 +67,7 @@
 	{
 		wxListBox* list = XRCCTRL(*this, "lstItems", wxListBox);
 		m_Array.Clear();
-		for (int i = 0; i < list->GetCount(); ++i)
+		for (unsigned i = 0; i < list->GetCount(); ++i)
 		{
 			m_Array.Add(list->GetString(i));
 		}
Index: sdk/editarrayorderdlg.cpp
===================================================================
--- sdk/editarrayorderdlg.cpp	(revision 3935)
+++ sdk/editarrayorderdlg.cpp	(working copy)
@@ -67,7 +67,7 @@
     wxListBox* list = XRCCTRL(*this, "lstItems", wxListBox);
 
     XRCCTRL(*this, "btnMoveUp", wxButton)->Enable(list->GetSelection() > 0);
-    XRCCTRL(*this, "btnMoveDown", wxButton)->Enable(list->GetSelection() >= 0 && list->GetSelection() < list->GetCount() - 1);
+    XRCCTRL(*this, "btnMoveDown", wxButton)->Enable(list->GetSelection() >= 0 && list->GetSelection() < signed(list->GetCount()) - 1);
 }
 
 void EditArrayOrderDlg::OnMoveUp(wxCommandEvent& event)
@@ -89,7 +89,7 @@
     wxListBox* list = XRCCTRL(*this, "lstItems", wxListBox);
     int sel = list->GetSelection();
 
-    if (sel < list->GetCount() - 1)
+    if (sel < signed(list->GetCount()) - 1)
     {
         wxString tmp = list->GetString(sel);
         list->Delete(sel);
@@ -105,7 +105,7 @@
         wxListBox* list = XRCCTRL(*this, "lstItems", wxListBox);
 
         m_Array.Clear();
-        for (int i = 0; i < list->GetCount(); ++i)
+        for (unsigned i = 0; i < list->GetCount(); ++i)
             m_Array.Add(list->GetString(i));
     }
 
Index: sdk/editarraystringdlg.cpp
===================================================================
--- sdk/editarraystringdlg.cpp	(revision 3935)
+++ sdk/editarraystringdlg.cpp	(working copy)
@@ -57,7 +57,7 @@
 	{
 		wxListBox* list = XRCCTRL(*this, "lstItems", wxListBox);
 		m_Array.Clear();
-		for (int i = 0; i < list->GetCount(); ++i)
+		for (unsigned i = 0; i < list->GetCount(); ++i)
 		{
 			m_Array.Add(list->GetString(i));
 		}
Index: sdk/editorconfigurationdlg.cpp
===================================================================
--- sdk/editorconfigurationdlg.cpp	(revision 3935)
+++ sdk/editorconfigurationdlg.cpp	(working copy)
@@ -781,8 +781,8 @@
     {
         m_AutoCompMap.erase(it);
         lstKeyword->Delete(sel);
-        if (sel >= lstKeyword->GetCount())
-            sel = lstKeyword->GetCount() - 1;
+        if (sel >= signed(lstKeyword->GetCount()))
+            sel = signed(lstKeyword->GetCount()) - 1;
         lstKeyword->SetSelection(sel);
         if (sel != -1)
         {
Index: sdk/finddlg.cpp
===================================================================
--- sdk/finddlg.cpp	(revision 3935)
+++ sdk/finddlg.cpp	(working copy)
@@ -140,7 +140,7 @@
 	else
 		combo = XRCCTRL(*this, "cmbFind1", wxComboBox);
     wxArrayString previous;
-    for (int i = 0; (i < combo->GetCount()) && (i < 10); ++i)
+    for (unsigned i = 0; (i < combo->GetCount()) && (i < 10); ++i)
     {
         if (!combo->GetString(i).IsEmpty())
             previous.Add(combo->GetString(i));
Index: sdk/multiselectdlg.cpp
===================================================================
--- sdk/multiselectdlg.cpp	(revision 3935)
+++ sdk/multiselectdlg.cpp	(working copy)
@@ -79,7 +79,7 @@
 {
 	int count = 0;
     wxCheckListBox* lst = XRCCTRL(*this, "lstItems", wxCheckListBox);
-	for (int i = 0; i < lst->GetCount(); ++i)
+	for (unsigned i = 0; i < lst->GetCount(); ++i)
 	{
         if (lst->IsChecked(i))
             ++count;
@@ -93,7 +93,7 @@
 {
     wxArrayString ret;
     wxCheckListBox* lst = XRCCTRL(*this, "lstItems", wxCheckListBox);
-	for (int i = 0; i < lst->GetCount(); ++i)
+	for (unsigned i = 0; i < lst->GetCount(); ++i)
 	{
         if (lst->IsChecked(i))
             ret.Add(lst->GetString(i));
@@ -105,7 +105,7 @@
 {
     wxArrayInt ret;
     wxCheckListBox* lst = XRCCTRL(*this, "lstItems", wxCheckListBox);
-	for (int i = 0; i < lst->GetCount(); ++i)
+	for (unsigned i = 0; i < lst->GetCount(); ++i)
 	{
         if (lst->IsChecked(i))
             ret.Add(i);
@@ -119,7 +119,7 @@
         return;
 	wxArrayString wilds = GetArrayFromString(wild, _T(";"));
     wxCheckListBox* lst = XRCCTRL(*this, "lstItems", wxCheckListBox);
-	for (int i = 0; i < lst->GetCount(); ++i)
+	for (unsigned i = 0; i < lst->GetCount(); ++i)
 	{
 		if (clearOld || !lst->IsChecked(i))
 		{
@@ -167,7 +167,7 @@
 void MultiSelectDlg::OnToggle(wxCommandEvent& /*event*/)
 {
     wxCheckListBox* lst = XRCCTRL(*this, "lstItems", wxCheckListBox);
-	for (int i = 0; i < lst->GetCount(); ++i)
+	for (unsigned i = 0; i < lst->GetCount(); ++i)
 	{
         lst->Check(i, !lst->IsChecked(i));
 	}
@@ -177,7 +177,7 @@
 void MultiSelectDlg::OnSelectAll(wxCommandEvent& /*event*/)
 {
     wxCheckListBox* lst = XRCCTRL(*this, "lstItems", wxCheckListBox);
-	for (int i = 0; i < lst->GetCount(); ++i)
+	for (unsigned i = 0; i < lst->GetCount(); ++i)
 	{
         lst->Check(i, true);
 	}
@@ -187,7 +187,7 @@
 void MultiSelectDlg::OnDeselectAll(wxCommandEvent& /*event*/)
 {
     wxCheckListBox* lst = XRCCTRL(*this, "lstItems", wxCheckListBox);
-	for (int i = 0; i < lst->GetCount(); ++i)
+	for (unsigned i = 0; i < lst->GetCount(); ++i)
 	{
         lst->Check(i, false);
 	}
Index: sdk/projectdepsdlg.cpp
===================================================================
--- sdk/projectdepsdlg.cpp	(revision 3935)
+++ sdk/projectdepsdlg.cpp	(working copy)
@@ -73,7 +73,7 @@
     Manager::Get()->GetProjectManager()->ClearProjectDependencies(thisprj);
 
     // now set the the new deps
-    for (int i = 0; i < lst->GetCount(); ++i)
+    for (unsigned i = 0; i < lst->GetCount(); ++i)
     {
         if (!lst->IsChecked(i))
             continue;
Index: sdk/projectfileoptionsdlg.cpp
===================================================================
--- sdk/projectfileoptionsdlg.cpp	(revision 3935)
+++ sdk/projectfileoptionsdlg.cpp	(working copy)
@@ -346,7 +346,7 @@
     {
         m_ProjectFile->buildTargets.Clear();
         wxCheckListBox *list = XRCCTRL(*this, "lstTargets", wxCheckListBox);
-        for (int i = 0; i < list->GetCount(); i++)
+        for (unsigned i = 0; i < list->GetCount(); i++)
         {
             if (list->IsChecked(i))
                 m_ProjectFile->AddBuildTarget(list->GetString(i));
Index: sdk/projectoptionsdlg.cpp
===================================================================
--- sdk/projectoptionsdlg.cpp	(revision 3935)
+++ sdk/projectoptionsdlg.cpp	(working copy)
@@ -754,7 +754,7 @@
     ProjectBuildTarget* target = m_Project->GetBuildTarget(targetIdx);
 
     wxCheckListBox* list = XRCCTRL(*this, "lstFiles", wxCheckListBox);
-    for (int i = 0; i < list->GetCount(); ++i)
+    for (unsigned i = 0; i < list->GetCount(); ++i)
 	{
 		ProjectFile* pf = m_Project->GetFile(i);
 		list->Check(i, !list->IsChecked(i));
@@ -917,7 +917,7 @@
     base->RemoveBuildScript(script);
     int isel = ctrl->GetSelection();
     ctrl->Delete(isel);
-    ctrl->SetSelection(isel < ctrl->GetCount() ? isel : --isel );
+    ctrl->SetSelection(isel < signed(ctrl->GetCount()) ? isel : --isel );
 }
 
 void ProjectOptionsDlg::OnPlatform(wxCommandEvent& event)
@@ -978,7 +978,7 @@
 void ProjectOptionsDlg::OnScriptMoveDown(wxSpinEvent& event)
 {
     wxListBox* ctrl = XRCCTRL(*this, "lstPreScripts", wxListBox);
-    if (!ctrl || ctrl->GetSelection() == ctrl->GetCount() - 1)
+    if (!ctrl || ctrl->GetSelection() == signed(ctrl->GetCount()) - 1)
         return;
 
 	wxTreeCtrl* tc = XRCCTRL(*this, "tcOverview", wxTreeCtrl);
Index: sdk/replacedlg.cpp
===================================================================
--- sdk/replacedlg.cpp	(revision 3935)
+++ sdk/replacedlg.cpp	(working copy)
@@ -147,7 +147,7 @@
 void ReplaceDlg::SaveComboValues(wxComboBox* combo, const wxString& configKey)
 {
 	wxArrayString values;
-	for (int i = 0; (i < combo->GetCount()) && (i < 10); ++i)
+	for (unsigned i = 0; (i < combo->GetCount()) && (i < 10); ++i)
 	{
 		if (!combo->GetString(i).IsEmpty())
 			values.Add(combo->GetString(i));
Index: sdk/virtualbuildtargetsdlg.cpp
===================================================================
--- sdk/virtualbuildtargetsdlg.cpp	(revision 3935)
+++ sdk/virtualbuildtargetsdlg.cpp	(working copy)
@@ -57,7 +57,7 @@
     if (!lstTargets->IsEnabled())
         return;
     wxArrayString checked;
-    for (int i = 0; i < lstTargets->GetCount(); ++i)
+    for (unsigned i = 0; i < lstTargets->GetCount(); ++i)
     {
         if (lstTargets->IsChecked(i))
             checked.Add(lstTargets->GetString(i));
Index: src/associations.cpp
===================================================================
--- src/associations.cpp	(revision 3935)
+++ src/associations.cpp	(working copy)
@@ -323,7 +323,7 @@
 	wxChar name[MAX_PATH] = {0};
 	GetModuleFileName(0L, name, MAX_PATH);
 
-    for(int i = 0; i < list->GetCount(); ++i)
+    for(unsigned i = 0; i < list->GetCount(); ++i)
     {
         if(list->IsChecked(i))
             ::DoSetAssociation(name, i);
Index: src/compilersettingsdlg.cpp
===================================================================
--- src/compilersettingsdlg.cpp	(revision 3935)
+++ src/compilersettingsdlg.cpp	(working copy)
@@ -217,7 +217,7 @@
         ConfigManager *bbcfg = Manager::Get()->GetConfigManager(_T("plugins"));
         wxArrayString bbplugins;
         wxCheckListBox* clb = XRCCTRL(*this, "chkBBPlugins", wxCheckListBox);
-        for (int i = 0; i < clb->GetCount(); ++i)
+        for (unsigned i = 0; i < clb->GetCount(); ++i)
         {
             if (clb->IsChecked(i))
             {
Index: src/environmentsettingsdlg.cpp
===================================================================
--- src/environmentsettingsdlg.cpp	(revision 3935)
+++ src/environmentsettingsdlg.cpp	(working copy)
@@ -419,7 +419,7 @@
 
         ConfigManagerContainer::StringSet dialogs = acfg->ReadSSet(_T("/disabled"));
 
-        for (int i = 0; i < lb->GetCount(); ++i)
+        for (unsigned i = 0; i < lb->GetCount(); ++i)
         {
             if (lb->IsChecked(i))
                 dialogs.erase(lb->GetString(i));
