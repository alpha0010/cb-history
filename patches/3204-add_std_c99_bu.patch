Index: src/plugins/compilergcc/compilerGNUARM.cpp
===================================================================
--- src/plugins/compilergcc/compilerGNUARM.cpp	(revision 7436)
+++ src/plugins/compilergcc/compilerGNUARM.cpp	(working copy)
@@ -93,6 +93,7 @@
 
     // warnings
     m_Options.AddOption(_("In C mode, support all ISO C90 programs. In C++ mode, remove GNU extensions that conflict with ISO C++"), _T("-ansi"), category);
+    m_Options.AddOption(_("Support ISO C99 programs, remove GNU extensions that conflict with the C99 standards"), _T("-std=c99"), category);
     m_Options.AddOption(_("Enable all compiler warnings (overrides many other settings)"), _T("-Wall"), category);
     m_Options.AddOption(_("Enable extra compiler warnings"), _T("-Wextra"), category);
     m_Options.AddOption(_("Enable standard compiler warnings"), _T("-W"), category);
Index: src/plugins/compilergcc/compilerGNUAVR.cpp
===================================================================
--- src/plugins/compilergcc/compilerGNUAVR.cpp	(revision 7436)
+++ src/plugins/compilergcc/compilerGNUAVR.cpp	(working copy)
@@ -90,6 +90,7 @@
 
     // warnings
     m_Options.AddOption(_("In C mode, support all ISO C90 programs. In C++ mode, remove GNU extensions that conflict with ISO C++"), _T("-ansi"), category);
+    m_Options.AddOption(_("Support ISO C99 programs, remove GNU extensions that conflict with the C99 standards"), _T("-std=c99"), category);
     m_Options.AddOption(_("Enable all compiler warnings (overrides every other setting)"), _T("-Wall"), category);
     m_Options.AddOption(_("Enable standard compiler warnings"), _T("-W"), category);
     m_Options.AddOption(_("Stop compiling after first error"), _T("-Wfatal-errors"), category);
Index: src/plugins/compilergcc/compilerGNUMSP430.cpp
===================================================================
--- src/plugins/compilergcc/compilerGNUMSP430.cpp	(revision 7436)
+++ src/plugins/compilergcc/compilerGNUMSP430.cpp	(working copy)
@@ -96,6 +96,7 @@
 
     // warnings
     m_Options.AddOption(_("In C mode, support all ISO C90 programs. In C++ mode, remove GNU extensions that conflict with ISO C++"), _T("-ansi"), category);
+    m_Options.AddOption(_("Support ISO C99 programs, remove GNU extensions that conflict with the C99 standards"), _T("-std=c99"), category);
     m_Options.AddOption(_("Enable all compiler warnings (overrides every other setting)"), _T("-Wall"), category);
     m_Options.AddOption(_("Enable standard compiler warnings"), _T("-W"), category);
     m_Options.AddOption(_("Stop compiling after first error"), _T("-Wfatal-errors"), category);
Index: src/plugins/compilergcc/compilerGNUPOWERPC.cpp
===================================================================
--- src/plugins/compilergcc/compilerGNUPOWERPC.cpp	(revision 7436)
+++ src/plugins/compilergcc/compilerGNUPOWERPC.cpp	(working copy)
@@ -95,6 +95,7 @@
 
     // warnings
     m_Options.AddOption(_("In C mode, support all ISO C90 programs. In C++ mode, remove GNU extensions that conflict with ISO C++"), _T("-ansi"), category);
+    m_Options.AddOption(_("Support ISO C99 programs, remove GNU extensions that conflict with the C99 standards"), _T("-std=c99"), category);
     m_Options.AddOption(_("Enable all compiler warnings (overrides every other setting)"), _T("-Wall"), category);
     m_Options.AddOption(_("Enable standard compiler warnings"), _T("-W"), category);
     m_Options.AddOption(_("Stop compiling after first error"), _T("-Wfatal-errors"), category);
Index: src/plugins/compilergcc/compilerGNUTRICORE.cpp
===================================================================
--- src/plugins/compilergcc/compilerGNUTRICORE.cpp	(revision 7436)
+++ src/plugins/compilergcc/compilerGNUTRICORE.cpp	(working copy)
@@ -95,6 +95,7 @@
 
     // warnings
     m_Options.AddOption(_("In C mode, support all ISO C90 programs. In C++ mode, remove GNU extensions that conflict with ISO C++"), _T("-ansi"), category);
+    m_Options.AddOption(_("Support ISO C99 programs, remove GNU extensions that conflict with the C99 standards"), _T("-std=c99"), category);
     m_Options.AddOption(_("Enable all compiler warnings (overrides every other setting)"), _T("-Wall"), category);
     m_Options.AddOption(_("Enable standard compiler warnings"), _T("-W"), category);
     m_Options.AddOption(_("Stop compiling after first error"), _T("-Wfatal-errors"), category);
Index: src/plugins/compilergcc/compilerMINGW.cpp
===================================================================
--- src/plugins/compilergcc/compilerMINGW.cpp	(revision 7436)
+++ src/plugins/compilergcc/compilerMINGW.cpp	(working copy)
@@ -110,6 +110,7 @@
 
     // warnings
     m_Options.AddOption(_("In C mode, support all ISO C90 programs. In C++ mode, remove GNU extensions that conflict with ISO C++"), _T("-ansi"), category);
+    m_Options.AddOption(_("Support ISO C99 programs, remove GNU extensions that conflict with the C99 standards"), _T("-std=c99"), category);
     m_Options.AddOption(_("Enable all compiler warnings (overrides many other settings)"), _T("-Wall"), category);
     m_Options.AddOption(_("Enable extra compiler warnings"), _T("-Wextra"), category);
     m_Options.AddOption(_("Stop compiling after first error"), _T("-Wfatal-errors"), category);
