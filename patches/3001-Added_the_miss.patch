Index: src/plugins/contrib/wxSmith/wxSmith-unix.cbp
===================================================================
--- src/plugins/contrib/wxSmith/wxSmith-unix.cbp	(revision 6328)
+++ src/plugins/contrib/wxSmith/wxSmith-unix.cbp	(working copy)
@@ -318,6 +318,12 @@
 		<Unit filename="wxsversionconverter.h">
 			<Option target="wxSmithLib" />
 		</Unit>
+		<Unit filename="wxwidgets/defitems/wxsanimationctrl.cpp">
+			<Option target="wxSmithLib" />
+		</Unit>
+		<Unit filename="wxwidgets/defitems/wxsanimationctrl.h">
+			<Option target="wxSmithLib" />
+		</Unit>
 		<Unit filename="wxwidgets/defitems/wxsbitmapbutton.cpp">
 			<Option target="wxSmithLib" />
 		</Unit>
@@ -408,6 +414,12 @@
 		<Unit filename="wxwidgets/defitems/wxsfiledialog.h">
 			<Option target="wxSmithLib" />
 		</Unit>
+		<Unit filename="wxwidgets/defitems/wxsfindreplacedialog.cpp">
+			<Option target="wxSmithLib" />
+		</Unit>
+		<Unit filename="wxwidgets/defitems/wxsfindreplacedialog.h">
+			<Option target="wxSmithLib" />
+		</Unit>
 		<Unit filename="wxwidgets/defitems/wxsflexgridsizer.cpp">
 			<Option target="wxSmithLib" />
 		</Unit>
@@ -456,6 +468,12 @@
 		<Unit filename="wxwidgets/defitems/wxshtmlwindow.h">
 			<Option target="wxSmithLib" />
 		</Unit>
+		<Unit filename="wxwidgets/defitems/wxshyperlinkctrl.cpp">
+			<Option target="wxSmithLib" />
+		</Unit>
+		<Unit filename="wxwidgets/defitems/wxshyperlinkctrl.h">
+			<Option target="wxSmithLib" />
+		</Unit>
 		<Unit filename="wxwidgets/defitems/wxslistbook.cpp">
 			<Option target="wxSmithLib" />
 		</Unit>
@@ -474,6 +492,12 @@
 		<Unit filename="wxwidgets/defitems/wxslistctrl.h">
 			<Option target="wxSmithLib" />
 		</Unit>
+		<Unit filename="wxwidgets/defitems/wxsmediactrl.cpp">
+			<Option target="wxSmithLib" />
+		</Unit>
+		<Unit filename="wxwidgets/defitems/wxsmediactrl.h">
+			<Option target="wxSmithLib" />
+		</Unit>
 		<Unit filename="wxwidgets/defitems/wxsmenu.cpp">
 			<Option target="wxSmithLib" />
 		</Unit>
@@ -498,6 +522,12 @@
 		<Unit filename="wxwidgets/defitems/wxsmenuitem.h">
 			<Option target="wxSmithLib" />
 		</Unit>
+		<Unit filename="wxwidgets/defitems/wxsmessagedialog.cpp">
+			<Option target="wxSmithLib" />
+		</Unit>
+		<Unit filename="wxwidgets/defitems/wxsmessagedialog.h">
+			<Option target="wxSmithLib" />
+		</Unit>
 		<Unit filename="wxwidgets/defitems/wxsmultichoicedialog.cpp">
 			<Option target="wxSmithLib" />
 		</Unit>
@@ -510,12 +540,36 @@
 		<Unit filename="wxwidgets/defitems/wxsnotebook.h">
 			<Option target="wxSmithLib" />
 		</Unit>
+		<Unit filename="wxwidgets/defitems/wxspagesetupdialog.cpp">
+			<Option target="wxSmithLib" />
+		</Unit>
+		<Unit filename="wxwidgets/defitems/wxspagesetupdialog.h">
+			<Option target="wxSmithLib" />
+		</Unit>
 		<Unit filename="wxwidgets/defitems/wxspanel.cpp">
 			<Option target="wxSmithLib" />
 		</Unit>
 		<Unit filename="wxwidgets/defitems/wxspanel.h">
 			<Option target="wxSmithLib" />
 		</Unit>
+		<Unit filename="wxwidgets/defitems/wxspasswordentrydialog.cpp">
+			<Option target="wxSmithLib" />
+		</Unit>
+		<Unit filename="wxwidgets/defitems/wxspasswordentrydialog.h">
+			<Option target="wxSmithLib" />
+		</Unit>
+		<Unit filename="wxwidgets/defitems/wxsprintdialog.cpp">
+			<Option target="wxSmithLib" />
+		</Unit>
+		<Unit filename="wxwidgets/defitems/wxsprintdialog.h">
+			<Option target="wxSmithLib" />
+		</Unit>
+		<Unit filename="wxwidgets/defitems/wxsprogressdialog.cpp">
+			<Option target="wxSmithLib" />
+		</Unit>
+		<Unit filename="wxwidgets/defitems/wxsprogressdialog.h">
+			<Option target="wxSmithLib" />
+		</Unit>
 		<Unit filename="wxwidgets/defitems/wxsradiobox.cpp">
 			<Option target="wxSmithLib" />
 		</Unit>
@@ -528,6 +582,18 @@
 		<Unit filename="wxwidgets/defitems/wxsradiobutton.h">
 			<Option target="wxSmithLib" />
 		</Unit>
+		<Unit filename="wxwidgets/defitems/wxsrichtextformattingdialog.cpp">
+			<Option target="wxSmithLib" />
+		</Unit>
+		<Unit filename="wxwidgets/defitems/wxsrichtextformattingdialog.h">
+			<Option target="wxSmithLib" />
+		</Unit>
+		<Unit filename="wxwidgets/defitems/wxsrichtextstyleorganiserdialog.cpp">
+			<Option target="wxSmithLib" />
+		</Unit>
+		<Unit filename="wxwidgets/defitems/wxsrichtextstyleorganiserdialog.h">
+			<Option target="wxSmithLib" />
+		</Unit>
 		<Unit filename="wxwidgets/defitems/wxssashlayoutwindow.cpp">
 			<Option target="wxSmithLib" />
 		</Unit>
@@ -660,6 +726,12 @@
 		<Unit filename="wxwidgets/defitems/wxstextctrl.h">
 			<Option target="wxSmithLib" />
 		</Unit>
+		<Unit filename="wxwidgets/defitems/wxstextentrydialog.cpp">
+			<Option target="wxSmithLib" />
+		</Unit>
+		<Unit filename="wxwidgets/defitems/wxstextentrydialog.h">
+			<Option target="wxSmithLib" />
+		</Unit>
 		<Unit filename="wxwidgets/defitems/wxstimer.cpp">
 			<Option target="wxSmithLib" />
 		</Unit>
Index: src/plugins/contrib/wxSmith/wxSmith.cbp
===================================================================
--- src/plugins/contrib/wxSmith/wxSmith.cbp	(revision 6328)
+++ src/plugins/contrib/wxSmith/wxSmith.cbp	(working copy)
@@ -341,6 +341,12 @@
 		<Unit filename="wxsversionconverter.h">
 			<Option target="wxSmithLib" />
 		</Unit>
+		<Unit filename="wxwidgets\defitems\wxsanimationctrl.cpp">
+			<Option target="wxSmithLib" />
+		</Unit>
+		<Unit filename="wxwidgets\defitems\wxsanimationctrl.h">
+			<Option target="wxSmithLib" />
+		</Unit>
 		<Unit filename="wxwidgets\defitems\wxsbitmapbutton.cpp">
 			<Option target="wxSmithLib" />
 		</Unit>
@@ -431,12 +437,24 @@
 		<Unit filename="wxwidgets\defitems\wxsfiledialog.h">
 			<Option target="wxSmithLib" />
 		</Unit>
+		<Unit filename="wxwidgets\defitems\wxsfindreplacedialog.cpp">
+			<Option target="wxSmithLib" />
+		</Unit>
+		<Unit filename="wxwidgets\defitems\wxsfindreplacedialog.h">
+			<Option target="wxSmithLib" />
+		</Unit>
 		<Unit filename="wxwidgets\defitems\wxsflexgridsizer.cpp">
 			<Option target="wxSmithLib" />
 		</Unit>
 		<Unit filename="wxwidgets\defitems\wxsflexgridsizer.h">
 			<Option target="wxSmithLib" />
 		</Unit>
+		<Unit filename="wxwidgets\defitems\wxsfontdialog.cpp">
+			<Option target="wxSmithLib" />
+		</Unit>
+		<Unit filename="wxwidgets\defitems\wxsfontdialog.h">
+			<Option target="wxSmithLib" />
+		</Unit>
 		<Unit filename="wxwidgets\defitems\wxsframe.cpp">
 			<Option target="wxSmithLib" />
 		</Unit>
@@ -479,6 +497,12 @@
 		<Unit filename="wxwidgets\defitems\wxshtmlwindow.h">
 			<Option target="wxSmithLib" />
 		</Unit>
+		<Unit filename="wxwidgets\defitems\wxshyperlinkctrl.cpp">
+			<Option target="wxSmithLib" />
+		</Unit>
+		<Unit filename="wxwidgets\defitems\wxshyperlinkctrl.h">
+			<Option target="wxSmithLib" />
+		</Unit>
 		<Unit filename="wxwidgets\defitems\wxslistbook.cpp">
 			<Option target="wxSmithLib" />
 		</Unit>
@@ -497,6 +521,12 @@
 		<Unit filename="wxwidgets\defitems\wxslistctrl.h">
 			<Option target="wxSmithLib" />
 		</Unit>
+		<Unit filename="wxwidgets\defitems\wxsmediactrl.cpp">
+			<Option target="wxSmithLib" />
+		</Unit>
+		<Unit filename="wxwidgets\defitems\wxsmediactrl.h">
+			<Option target="wxSmithLib" />
+		</Unit>
 		<Unit filename="wxwidgets\defitems\wxsmenu.cpp">
 			<Option target="wxSmithLib" />
 		</Unit>
@@ -521,6 +551,12 @@
 		<Unit filename="wxwidgets\defitems\wxsmenuitem.h">
 			<Option target="wxSmithLib" />
 		</Unit>
+		<Unit filename="wxwidgets\defitems\wxsmessagedialog.cpp">
+			<Option target="wxSmithLib" />
+		</Unit>
+		<Unit filename="wxwidgets\defitems\wxsmessagedialog.h">
+			<Option target="wxSmithLib" />
+		</Unit>
 		<Unit filename="wxwidgets\defitems\wxsmultichoicedialog.cpp">
 			<Option target="wxSmithLib" />
 		</Unit>
@@ -533,12 +569,36 @@
 		<Unit filename="wxwidgets\defitems\wxsnotebook.h">
 			<Option target="wxSmithLib" />
 		</Unit>
+		<Unit filename="wxwidgets\defitems\wxspagesetupdialog.cpp">
+			<Option target="wxSmithLib" />
+		</Unit>
+		<Unit filename="wxwidgets\defitems\wxspagesetupdialog.h">
+			<Option target="wxSmithLib" />
+		</Unit>
 		<Unit filename="wxwidgets\defitems\wxspanel.cpp">
 			<Option target="wxSmithLib" />
 		</Unit>
 		<Unit filename="wxwidgets\defitems\wxspanel.h">
 			<Option target="wxSmithLib" />
 		</Unit>
+		<Unit filename="wxwidgets\defitems\wxspasswordentrydialog.cpp">
+			<Option target="wxSmithLib" />
+		</Unit>
+		<Unit filename="wxwidgets\defitems\wxspasswordentrydialog.h">
+			<Option target="wxSmithLib" />
+		</Unit>
+		<Unit filename="wxwidgets\defitems\wxsprintdialog.cpp">
+			<Option target="wxSmithLib" />
+		</Unit>
+		<Unit filename="wxwidgets\defitems\wxsprintdialog.h">
+			<Option target="wxSmithLib" />
+		</Unit>
+		<Unit filename="wxwidgets\defitems\wxsprogressdialog.cpp">
+			<Option target="wxSmithLib" />
+		</Unit>
+		<Unit filename="wxwidgets\defitems\wxsprogressdialog.h">
+			<Option target="wxSmithLib" />
+		</Unit>
 		<Unit filename="wxwidgets\defitems\wxsradiobox.cpp">
 			<Option target="wxSmithLib" />
 		</Unit>
@@ -551,6 +611,18 @@
 		<Unit filename="wxwidgets\defitems\wxsradiobutton.h">
 			<Option target="wxSmithLib" />
 		</Unit>
+		<Unit filename="wxwidgets\defitems\wxsrichtextformattingdialog.cpp">
+			<Option target="wxSmithLib" />
+		</Unit>
+		<Unit filename="wxwidgets\defitems\wxsrichtextformattingdialog.h">
+			<Option target="wxSmithLib" />
+		</Unit>
+		<Unit filename="wxwidgets\defitems\wxsrichtextstyleorganiserdialog.cpp">
+			<Option target="wxSmithLib" />
+		</Unit>
+		<Unit filename="wxwidgets\defitems\wxsrichtextstyleorganiserdialog.h">
+			<Option target="wxSmithLib" />
+		</Unit>
 		<Unit filename="wxwidgets\defitems\wxssashlayoutwindow.cpp">
 			<Option target="wxSmithLib" />
 		</Unit>
@@ -683,6 +755,12 @@
 		<Unit filename="wxwidgets\defitems\wxstextctrl.h">
 			<Option target="wxSmithLib" />
 		</Unit>
+		<Unit filename="wxwidgets\defitems\wxstextentrydialog.cpp">
+			<Option target="wxSmithLib" />
+		</Unit>
+		<Unit filename="wxwidgets\defitems\wxstextentrydialog.h">
+			<Option target="wxSmithLib" />
+		</Unit>
 		<Unit filename="wxwidgets\defitems\wxstimer.cpp">
 			<Option target="wxSmithLib" />
 		</Unit>
Index: src/plugins/contrib/wxSmith/wxwidgets/defitems/Makefile.am
===================================================================
--- src/plugins/contrib/wxSmith/wxwidgets/defitems/Makefile.am	(revision 6328)
+++ src/plugins/contrib/wxSmith/wxwidgets/defitems/Makefile.am	(working copy)
@@ -74,7 +74,24 @@
 ./wxssingleinstancechecker.cpp \
 ./wxsstopwatch.cpp \
 ./wxssymbolpickerdialog.cpp \
-./wxsglcanvas.cpp
+./wxsglcanvas.cpp \
+./wxshyperlinkctrl.cpp \
+./wxsanimationctrl.cpp \
+./wxsmediactrl.cpp \
+./wxsfindreplacedialog.cpp \
+./wxsfontdialog.cpp \
+./wxsmessagedialog.cpp \
+./wxspagesetupdialog.cpp \
+./wxspasswordentrydialog.cpp \
+./wxsprintdialog.cpp \
+./wxsprogressdialog.cpp \
+./wxsrichtextformattingdialog.cpp \
+./wxsrichtextstyleorganiserdialog.cpp \
+./wxstextentrydialog.cpp
 
 noinst_HEADERS = \
 ./wxsgauge.h \
@@ -139,5 +156,22 @@
 ./wxssingleinstancechecker.h \
 ./wxsstopwatch.h \
 ./wxssymbolpickerdialog.h \
-./wxsglcanvas.h
+./wxsglcanvas.h \
+./wxshyperlinkctrl.h \
+./wxsanimationctrl.h \
+./wxsmediactrl.h \
+./wxsfindreplacedialog.h \
+./wxsfontdialog.h \
+./wxsmessagedialog.h \
+./wxspagesetupdialog.h \
+./wxspasswordentrydialog.h \
+./wxsprintdialog.h \
+./wxsprogressdialog.h \
+./wxsrichtextformattingdialog.h \
+./wxsrichtextstyleorganiserdialog.h \
+./wxstextentrydialog.h
 
Index: src/plugins/contrib/wxSmith/wxwidgets/defitems/wxscolourdialog.cpp
===================================================================
--- src/plugins/contrib/wxSmith/wxwidgets/defitems/wxscolourdialog.cpp	(revision 6328)
+++ src/plugins/contrib/wxSmith/wxwidgets/defitems/wxscolourdialog.cpp	(working copy)
@@ -1,4 +1,5 @@
-/*
+/** \file wxscolourdialog.cpp
+*
 * This file is part of wxSmith plugin for Code::Blocks Studio
 * Copyright (C) 2007  Bartlomiej Swiecki
 *
@@ -26,7 +27,7 @@
 
 namespace
 {
-    wxsRegisterItem<wxsColourDialog> Reg(_T("ColourDialog"),wxsTTool,_T("Dialogs"),50,false);
+    wxsRegisterItem<wxsColourDialog> Reg(_T("ColourDialog"),wxsTTool,_T("Dialogs"),200,false);
 }
 
 wxsColourDialog::wxsColourDialog(wxsItemResData* Data):
Index: src/plugins/contrib/wxSmith/wxwidgets/defitems/wxscolourdialog.h
===================================================================
--- src/plugins/contrib/wxSmith/wxwidgets/defitems/wxscolourdialog.h	(revision 6328)
+++ src/plugins/contrib/wxSmith/wxwidgets/defitems/wxscolourdialog.h	(working copy)
@@ -1,4 +1,5 @@
-/*
+/** \file wxscolourdialog.h
+*
 * This file is part of wxSmith plugin for Code::Blocks Studio
 * Copyright (C) 2007  Bartlomiej Swiecki
 *
Index: src/plugins/contrib/wxSmith/wxwidgets/defitems/wxsdirdialog.cpp
===================================================================
--- src/plugins/contrib/wxSmith/wxwidgets/defitems/wxsdirdialog.cpp	(revision 6328)
+++ src/plugins/contrib/wxSmith/wxwidgets/defitems/wxsdirdialog.cpp	(working copy)
@@ -1,4 +1,5 @@
-/*
+/** \file wxsdirdialog.cpp
+*
 * This file is part of wxSmith plugin for Code::Blocks Studio
 * Copyright (C) 2007  Bartlomiej Swiecki
 *
@@ -26,7 +27,7 @@
 
 namespace
 {
-    wxsRegisterItem<wxsDirDialog> Reg(_T("DirDialog"),wxsTTool,_T("Dialogs"),50,false);
+    wxsRegisterItem<wxsDirDialog> Reg(_T("DirDialog"),wxsTTool,_T("Dialogs"),190,false);
 
     WXS_ST_BEGIN(wxsDirDialogStyles,_T("wxDD_DEFAULT_STYLE"))
         WXS_ST_CATEGORY("wxDirDialog")
Index: src/plugins/contrib/wxSmith/wxwidgets/defitems/wxsdirdialog.h
===================================================================
--- src/plugins/contrib/wxSmith/wxwidgets/defitems/wxsdirdialog.h	(revision 6328)
+++ src/plugins/contrib/wxSmith/wxwidgets/defitems/wxsdirdialog.h	(working copy)
@@ -1,4 +1,5 @@
-/*
+/** \file wxsdirdialog.h
+*
 * This file is part of wxSmith plugin for Code::Blocks Studio
 * Copyright (C) 2007  Bartlomiej Swiecki
 *
Index: src/plugins/contrib/wxSmith/wxwidgets/defitems/wxsfiledialog.cpp
===================================================================
--- src/plugins/contrib/wxSmith/wxwidgets/defitems/wxsfiledialog.cpp	(revision 6328)
+++ src/plugins/contrib/wxSmith/wxwidgets/defitems/wxsfiledialog.cpp	(working copy)
@@ -1,4 +1,5 @@
-/*
+/** \file wxsfiledialog.cpp
+*
 * This file is part of wxSmith plugin for Code::Blocks Studio
 * Copyright (C) 2007  Bartlomiej Swiecki
 *
@@ -26,7 +27,7 @@
 
 namespace
 {
-    wxsRegisterItem<wxsFileDialog> Reg(_T("FileDialog"),wxsTTool,_T("Dialogs"),50,false);
+    wxsRegisterItem<wxsFileDialog> Reg(_T("FileDialog"),wxsTTool,_T("Dialogs"),180,false);
 
     WXS_ST_BEGIN(wxsFileDialogStyles,_T("wxFD_DEFAULT_STYLE"))
         WXS_ST_CATEGORY("wxFileDialog")
Index: src/plugins/contrib/wxSmith/wxwidgets/defitems/wxsfiledialog.h
===================================================================
--- src/plugins/contrib/wxSmith/wxwidgets/defitems/wxsfiledialog.h	(revision 6328)
+++ src/plugins/contrib/wxSmith/wxwidgets/defitems/wxsfiledialog.h	(working copy)
@@ -1,4 +1,5 @@
-/*
+/** \file wxsfiledialog.h
+*
 * This file is part of wxSmith plugin for Code::Blocks Studio
 * Copyright (C) 2007  Bartlomiej Swiecki
 *
Index: src/plugins/contrib/wxSmith/wxwidgets/defitems/wxsfindreplacedialog.cpp
===================================================================
--- src/plugins/contrib/wxSmith/wxwidgets/defitems/wxsfindreplacedialog.cpp	(revision 0)
+++ src/plugins/contrib/wxSmith/wxwidgets/defitems/wxsfindreplacedialog.cpp	(revision 0)
@@ -0,0 +1,107 @@
+/** \file wxsfindreplacedialog.cpp
+*
+* This file is part of wxSmith plugin for Code::Blocks Studio
+* Copyright (C) 2010 Gary Harris
+*
+* wxSmith is free software; you can redistribute it and/or modify
+* it under the terms of the GNU General Public License as published by
+* the Free Software Foundation; either version 3 of the License, or
+* (at your option) any later version.
+*
+* wxSmith is distributed in the hope that it will be useful,
+* but WITHOUT ANY WARRANTY; without even the implied warranty of
+* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+* GNU General Public License for more details.
+*
+* You should have received a copy of the GNU General Public License
+* along with wxSmith. If not, see <http://www.gnu.org/licenses/>.
+*
+*/
+
+#include "../wxsitemresdata.h"
+#include "wxsfindreplacedialog.h"
+#include <wx/fdrepdlg.h>
+
+
+namespace
+{
+    wxsRegisterItem<wxsFindReplaceDialog> Reg(
+        _T("FindReplaceDialog"),       	// Class base name
+        wxsTTool,                       				// Item type
+        _T("Dialogs"),                  			// Category in palette
+        170,                             					// Priority in palette
+        false);                         					// We do not allow this item inside XRC files
+
+
+    WXS_ST_BEGIN(wxsFindReplaceDialogStyles, NULL);
+		WXS_ST_CATEGORY("wxFindReplaceDialog")
+		WXS_ST(wxFR_REPLACEDIALOG)
+		WXS_ST(wxFR_NOUPDOWN)
+		WXS_ST(wxFR_NOMATCHCASE)
+		WXS_ST(wxFR_NOWHOLEWORD)
+    WXS_ST_END()
+
+    WXS_EV_BEGIN(wxsFindReplaceDialogEvents)
+        WXS_EVI(EVT_FIND, wxEVT_COMMAND_FIND, wxFindDialogEvent, Find)
+        WXS_EVI(EVT_FIND_NEXT, wxEVT_COMMAND_FIND_NEXT, wxFindDialogEvent, FindNext)
+        WXS_EVI(EVT_FIND_REPLACE, wxEVT_COMMAND_FIND_REPLACE, wxFindDialogEvent, Replace)
+        WXS_EVI(EVT_FIND_REPLACE_ALL, wxEVT_COMMAND_FIND_REPLACE_ALL, wxFindDialogEvent, ReplaceAll)
+        WXS_EVI(EVT_FIND_CLOSE, wxEVT_COMMAND_FIND_CLOSE, wxFindDialogEvent, Close)
+    WXS_EV_END()
+}
+
+/*! \brief Ctor
+ *
+ * \param Data wxsItemResData*	The control's resource data.
+ *
+ */
+wxsFindReplaceDialog::wxsFindReplaceDialog(wxsItemResData *Data):
+    wxsTool(Data,
+			&Reg.Info,
+			wxsFindReplaceDialogEvents,
+			wxsFindReplaceDialogStyles,
+			(flVariable | flId | flSubclass | flExtraCode)),
+			m_sCaption(wxEmptyString)
+{
+}
+
+/*! \brief Create the dialogue.
+ *
+ * \return void
+ *
+ */
+void wxsFindReplaceDialog::OnBuildCreatingCode()
+{
+	wxString sNote(_("// NOTE: In order for events to connect properly you must set the ID of this wxFindReplaceDialog to -1 in wxSmith."));
+    switch(GetLanguage())
+    {
+        case wxsCPP:
+            AddHeader(_T("<wx/fdrepdlg.h>"), GetInfo().ClassName, 0);
+
+			AddDeclaration(wxT("wxFindReplaceData findReplaceData;"));
+            #if wxCHECK_VERSION(2, 9, 0)
+            Codef(_T("\t%s\n"), sNote.wx_str());
+            Codef(_T("%C(%W, &%v, %t, %T);\n"), wxT("findReplaceData"), m_sCaption.wx_str());
+            #else
+            Codef(_T("\t%s\n"), sNote.c_str());
+            Codef(_T("%C(%W, &%v, %t, %T);\n"), wxT("findReplaceData"), m_sCaption.c_str());
+            #endif
+
+            BuildSetupWindowCode();
+            break;
+
+        default:
+            wxsCodeMarks::Unknown(_T("wxsFindReplaceDialog::OnBuildCreatingCode"), GetLanguage());
+    }
+}
+
+/*! \brief Enumerate the dialogue's properties.
+ *
+ * \param flags long	The control flags.
+ * \return void
+ *
+ */
+void wxsFindReplaceDialog::OnEnumToolProperties(long Flags)
+{
+    WXS_SHORT_STRING(wxsFindReplaceDialog, m_sCaption, _("Caption"), _T("caption"), wxEmptyString, false);
+}
Index: src/plugins/contrib/wxSmith/wxwidgets/defitems/wxsfindreplacedialog.h
===================================================================
--- src/plugins/contrib/wxSmith/wxwidgets/defitems/wxsfindreplacedialog.h	(revision 0)
+++ src/plugins/contrib/wxSmith/wxwidgets/defitems/wxsfindreplacedialog.h	(revision 0)
@@ -0,0 +1,41 @@
+/** \file wxsfindreplacedialog.h
+*
+* This file is part of wxSmith plugin for Code::Blocks Studio
+* Copyright (C) 2010 Gary Harris
+*
+* wxSmith is free software; you can redistribute it and/or modify
+* it under the terms of the GNU General Public License as published by
+* the Free Software Foundation; either version 3 of the License, or
+* (at your option) any later version.
+*
+* wxSmith is distributed in the hope that it will be useful,
+* but WITHOUT ANY WARRANTY; without even the implied warranty of
+* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+* GNU General Public License for more details.
+*
+* You should have received a copy of the GNU General Public License
+* along with wxSmith. If not, see <http://www.gnu.org/licenses/>.
+*
+*/
+
+#ifndef WXSFINDREPLACEDIALOG_H
+#define WXSFINDREPLACEDIALOG_H
+
+#include "../wxstool.h"
+
+/** \brief Class for wxFindReplaceDialog dialogue. */
+class wxsFindReplaceDialog: public wxsTool
+{
+    public:
+
+        wxsFindReplaceDialog(wxsItemResData* Data);
+
+    private:
+
+        virtual void OnBuildCreatingCode();
+        virtual void OnEnumToolProperties(long Flags);
+
+        wxString m_sCaption;	//!< The dialogue caption.
+};
+
+#endif      //  WXSFINDREPLACEDIALOG_H
Index: src/plugins/contrib/wxSmith/wxwidgets/defitems/wxsfontdialog.cpp
===================================================================
--- src/plugins/contrib/wxSmith/wxwidgets/defitems/wxsfontdialog.cpp	(revision 0)
+++ src/plugins/contrib/wxSmith/wxwidgets/defitems/wxsfontdialog.cpp	(revision 0)
@@ -0,0 +1,120 @@
+/** \file wxsfontdialog.cpp
+*
+* This file is part of wxSmith plugin for Code::Blocks Studio
+* Copyright (C) 2010  Gary Harris
+*
+* wxSmith is free software; you can redistribute it and/or modify
+* it under the terms of the GNU General Public License as published by
+* the Free Software Foundation; either version 3 of the License, or
+* (at your option) any later version.
+*
+* wxSmith is distributed in the hope that it will be useful,
+* but WITHOUT ANY WARRANTY; without even the implied warranty of
+* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+* GNU General Public License for more details.
+*
+* You should have received a copy of the GNU General Public License
+* along with wxSmith. If not, see <http://www.gnu.org/licenses/>.
+*
+*/
+
+#include "wxsfontdialog.h"
+#include "../wxsitemresdata.h"
+#include <wx/fontdlg.h>
+
+namespace
+{
+    wxsRegisterItem<wxsFontDialog> Reg(_T("FontDialog"), wxsTTool, _T("Dialogs"), 160, false);
+}
+
+/*! \brief Ctor
+ *
+ * \param Data wxsItemResData*	The control's resource data.
+ *
+ */
+wxsFontDialog::wxsFontDialog(wxsItemResData* Data):
+    wxsTool(Data,&Reg.Info),
+    m_bAllowSymbols(true),
+	m_bEnableEffects(true),
+	m_bShowHelp(false),
+	m_iMinSize(0),
+	m_iMaxSize(0)
+{
+}
+
+/*! \brief Create the dialogue.
+ *
+ * \return void
+ *
+ */
+void wxsFontDialog::OnBuildCreatingCode()
+{
+    switch ( GetLanguage() )
+    {
+        case wxsCPP:
+        {
+            AddHeader(_T("<wx/fontdlg.h>"),GetInfo().ClassName,hfInPCH);
+
+			Codef(_T("\twxFontData  fontData;\n"));
+			wxString sClr = m_cdColour.BuildCode(GetCoderContext());
+			#if wxCHECK_VERSION(2, 9, 0)
+			if(!sClr.IsEmpty()){
+				Codef(_T("\tfontData.SetColour(%s);\n"), sClr.wx_str());
+			}
+			#else
+			if(!sClr.IsEmpty()){
+				Codef(_T("\tfontData.SetColour(%s);\n"), sClr.c_str());
+			}
+			#endif
+			if(!m_bEnableEffects){
+				Codef(_T("\tfontData.EnableEffects(%b);\n"), m_bEnableEffects);
+			}
+			Codef(_T("\tfontData.SetInitialFont(*wxNORMAL_FONT);\n"));
+
+			// These functions are Windows only.
+			if((wxPlatformInfo::Get().GetOperatingSystemId() & wxOS_WINDOWS) > 0){
+				if(!m_bShowHelp){
+					Codef(_T("\tfontData.SetAllowSymbols(%b);\n"), m_bAllowSymbols);
+				}
+				if(m_iMinSize > 0 || m_iMaxSize > 0){
+					Codef(_T("\tfontData.SetRange(%d, %d);\n"), m_iMinSize, m_iMaxSize);
+				}
+				if(m_bShowHelp){
+					Codef(_T("\tfontData.SetShowHelp(%b);\n"), m_bShowHelp);
+				}
+			}
+
+			Codef(_T("%C(%W, %v);\n"), wxT("fontData"));
+            BuildSetupWindowCode();
+            return;
+        }
+
+        default:
+        {
+            wxsCodeMarks::Unknown(_T("wxsFontDialog::OnBuildCreatingCode"),GetLanguage());
+        }
+    }
+}
+
+/*! \brief Enumerate the dialogue's properties.
+ *
+ * \param flags long	The control flags.
+ * \return void
+ *
+ */
+void wxsFontDialog::OnEnumToolProperties(long Flags)
+{
+	// These functions are Windows only.
+	if((wxPlatformInfo::Get().GetOperatingSystemId() & wxOS_WINDOWS) > 0){
+		WXS_BOOL(wxsFontDialog, m_bAllowSymbols, _("Allow Symbols"), _T("allow_symbols"), true)
+	}
+    WXS_COLOUR(wxsFontDialog, m_cdColour, _("Colour"), _T("colour"));
+    // This one is used by generic as well as Windows, so keep it available.
+	WXS_BOOL(wxsFontDialog, m_bEnableEffects, _("Enable Effects"), _T("enable_effects"), true)
+	// These functions are Windows only.
+	if((wxPlatformInfo::Get().GetOperatingSystemId() & wxOS_WINDOWS) > 0){
+		WXS_LONG(wxsFontDialog, m_iMinSize,  _("Min. Size"), _T("min_size"), 0)
+		WXS_LONG(wxsFontDialog, m_iMaxSize,  _("Max. Size"), _T("max_size"), 0)
+		WXS_BOOL(wxsFontDialog, m_bShowHelp, _("Show Help"), _T("show_help"), false)
+	}
+}
Index: src/plugins/contrib/wxSmith/wxwidgets/defitems/wxsfontdialog.h
===================================================================
--- src/plugins/contrib/wxSmith/wxwidgets/defitems/wxsfontdialog.h	(revision 0)
+++ src/plugins/contrib/wxSmith/wxwidgets/defitems/wxsfontdialog.h	(revision 0)
@@ -0,0 +1,46 @@
+/** \file wxsfontdialog.h
+*
+* This file is part of wxSmith plugin for Code::Blocks Studio
+* Copyright (C) 2010  Gary Harris
+*
+* wxSmith is free software; you can redistribute it and/or modify
+* it under the terms of the GNU General Public License as published by
+* the Free Software Foundation; either version 3 of the License, or
+* (at your option) any later version.
+*
+* wxSmith is distributed in the hope that it will be useful,
+* but WITHOUT ANY WARRANTY; without even the implied warranty of
+* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+* GNU General Public License for more details.
+*
+* You should have received a copy of the GNU General Public License
+* along with wxSmith. If not, see <http://www.gnu.org/licenses/>.
+*
+*/
+
+#ifndef WXSFONTDIALOG_H
+#define WXSFONTDIALOG_H
+
+#include "../wxstool.h"
+
+/** \brief Class for wxFontDialog dialogue. */
+class wxsFontDialog: public wxsTool
+{
+    public:
+
+        wxsFontDialog(wxsItemResData* Data);
+
+    private:
+
+        virtual void OnBuildCreatingCode();
+        virtual void OnEnumToolProperties(long Flags);
+
+        bool					m_bAllowSymbols;	//!< Allow symbol fonts to be selected..
+        bool					m_bEnableEffects;		//!< Enable effects.
+        bool					m_bShowHelp;			//!< Show the help button.
+        long					m_iMinSize;				//!< The minimum allowed font size.
+        long					m_iMaxSize;				//!< The maximum allowed font size.
+        wxsColourData	m_cdColour;				//!< The font colour..
+};
+
+#endif
Index: src/plugins/contrib/wxSmith/wxwidgets/defitems/wxsmessagedialog.cpp
===================================================================
--- src/plugins/contrib/wxSmith/wxwidgets/defitems/wxsmessagedialog.cpp	(revision 0)
+++ src/plugins/contrib/wxSmith/wxwidgets/defitems/wxsmessagedialog.cpp	(revision 0)
@@ -0,0 +1,107 @@
+/** \file wxsmessagedialog.cpp
+*
+* This file is part of wxSmith plugin for Code::Blocks Studio
+* Copyright (C) 2010 Gary Harris
+*
+* wxSmith is free software; you can redistribute it and/or modify
+* it under the terms of the GNU General Public License as published by
+* the Free Software Foundation; either version 3 of the License, or
+* (at your option) any later version.
+*
+* wxSmith is distributed in the hope that it will be useful,
+* but WITHOUT ANY WARRANTY; without even the implied warranty of
+* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+* GNU General Public License for more details.
+*
+* You should have received a copy of the GNU General Public License
+* along with wxSmith. If not, see <http://www.gnu.org/licenses/>.
+*
+*/
+
+#include "../wxsitemresdata.h"
+#include "wxsmessagedialog.h"
+#include <wx/msgdlg.h>
+
+
+namespace
+{
+    wxsRegisterItem<wxsMessageDialog> Reg(
+        _T("MessageDialog"),       		// Class base name
+        wxsTTool,                       			// Item type
+        _T("Dialogs"),                  		// Category in palette
+        150,                             				// Priority in palette
+        false);                         				// We do not allow this item inside XRC files
+
+
+    WXS_ST_BEGIN(wxsMessageDialogStyles, wxT("wxOK | wxCANCEL"));
+		WXS_ST_CATEGORY("wxMessageDialog")
+		WXS_ST(wxOK)
+		WXS_ST(wxCANCEL)
+		WXS_ST(wxYES_NO)
+		WXS_ST(wxYES_DEFAULT)
+		WXS_ST(wxNO_DEFAULT)
+		WXS_ST(wxICON_EXCLAMATION)
+		WXS_ST(wxICON_HAND)
+		WXS_ST(wxICON_ERROR)
+		WXS_ST(wxICON_QUESTION)
+		WXS_ST(wxICON_INFORMATION)
+		// This style is Windows only.
+		if((wxPlatformInfo::Get().GetOperatingSystemId() & wxOS_WINDOWS) > 0){
+			WXS_ST(wxSTAY_ON_TOP)
+		}
+    WXS_ST_END()
+}
+
+/*! \brief Ctor
+ *
+ * \param Data wxsItemResData*	The control's resource data.
+ *
+ */
+wxsMessageDialog::wxsMessageDialog(wxsItemResData *Data):
+    wxsTool(Data,
+			&Reg.Info,
+			NULL,
+			wxsMessageDialogStyles,
+			(flVariable | flId | flSubclass | flExtraCode)),
+			m_sCaption(wxMessageBoxCaptionStr),
+			m_sMessage(wxEmptyString)
+{
+}
+
+/*! \brief Create the dialogue.
+ *
+ * \return void
+ *
+ */
+void wxsMessageDialog::OnBuildCreatingCode()
+{
+    switch(GetLanguage())
+    {
+        case wxsCPP:
+            AddHeader(_T("<wx/progdlg.h>"), GetInfo().ClassName, 0);
+
+			#if wxCHECK_VERSION(2, 9, 0)
+			Codef(_T("%C(%W, %t, %t, %T, %P);\n"), m_sMessage.wx_str(), m_sCaption.wx_str());
+			#else
+			Codef(_T("%C(%W, %t, %t, %T, %P);\n"), m_sMessage.c_str(), m_sCaption.c_str());
+			#endif
+
+            BuildSetupWindowCode();
+            break;
+
+        default:
+            wxsCodeMarks::Unknown(_T("wxsMessageDialog::OnBuildCreatingCode"), GetLanguage());
+    }
+}
+
+/*! \brief Enumerate the dialogue's properties.
+ *
+ * \param flags long	The control flags.
+ * \return void
+ *
+ */
+void wxsMessageDialog::OnEnumToolProperties(long Flags)
+{
+    WXS_SHORT_STRING(wxsMessageDialog, m_sCaption, _("Caption"), _T("caption"), _T(""), true);
+    WXS_SHORT_STRING(wxsMessageDialog, m_sMessage, _("Message"), _T("message"), wxMessageBoxCaptionStr, true);
+}
Index: src/plugins/contrib/wxSmith/wxwidgets/defitems/wxsmessagedialog.h
===================================================================
--- src/plugins/contrib/wxSmith/wxwidgets/defitems/wxsmessagedialog.h	(revision 0)
+++ src/plugins/contrib/wxSmith/wxwidgets/defitems/wxsmessagedialog.h	(revision 0)
@@ -0,0 +1,42 @@
+/** \file wxsmessagedialog.h
+*
+* This file is part of wxSmith plugin for Code::Blocks Studio
+* Copyright (C) 2010 Gary Harris
+*
+* wxSmith is free software; you can redistribute it and/or modify
+* it under the terms of the GNU General Public License as published by
+* the Free Software Foundation; either version 3 of the License, or
+* (at your option) any later version.
+*
+* wxSmith is distributed in the hope that it will be useful,
+* but WITHOUT ANY WARRANTY; without even the implied warranty of
+* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+* GNU General Public License for more details.
+*
+* You should have received a copy of the GNU General Public License
+* along with wxSmith. If not, see <http://www.gnu.org/licenses/>.
+*
+*/
+
+#ifndef WXSMESSAGEDIALOG_H
+#define WXSMESSAGEDIALOG_H
+
+#include "../wxstool.h"
+
+/** \brief Class for wxMessageDialog dialogue. */
+class wxsMessageDialog: public wxsTool
+{
+    public:
+
+        wxsMessageDialog(wxsItemResData* Data);
+
+    private:
+
+        virtual void OnBuildCreatingCode();
+        virtual void OnEnumToolProperties(long Flags);
+
+        wxString 	m_sCaption;			//!< The dialogue's caption.
+        wxString 	m_sMessage;			//!< The dialogue message.
+};
+
+#endif      //  WXSMESSAGEDIALOG_H
Index: src/plugins/contrib/wxSmith/wxwidgets/defitems/wxsmultichoicedialog.cpp
===================================================================
--- src/plugins/contrib/wxSmith/wxwidgets/defitems/wxsmultichoicedialog.cpp	(revision 6328)
+++ src/plugins/contrib/wxSmith/wxwidgets/defitems/wxsmultichoicedialog.cpp	(working copy)
@@ -1,4 +1,5 @@
-/*
+/** \file wxsmultichoicedialog.cpp
+*
 * This file is part of wxSmith plugin for Code::Blocks Studio
 * Copyright (C) 2007  Bartlomiej Swiecki
 *
@@ -26,7 +27,7 @@
 
 namespace
 {
-    wxsRegisterItem<wxsMultiChoiceDialog> Reg(_T("MultiChoiceDialog"),wxsTTool,_T("Dialogs"),50,false);
+    wxsRegisterItem<wxsMultiChoiceDialog> Reg(_T("MultiChoiceDialog"),wxsTTool,_T("Dialogs"),140,false);
 
     WXS_ST_BEGIN(wxsMultiChoiceDialogStyles,_T("wxCHOICEDLG_STYLE"))
         WXS_ST_CATEGORY("wxMultiChoiceDialog")
Index: src/plugins/contrib/wxSmith/wxwidgets/defitems/wxsmultichoicedialog.h
===================================================================
--- src/plugins/contrib/wxSmith/wxwidgets/defitems/wxsmultichoicedialog.h	(revision 6328)
+++ src/plugins/contrib/wxSmith/wxwidgets/defitems/wxsmultichoicedialog.h	(working copy)
@@ -1,4 +1,5 @@
-/*
+/** \file wxsmultichoicedialog.h
+*
 * This file is part of wxSmith plugin for Code::Blocks Studio
 * Copyright (C) 2007  Bartlomiej Swiecki
 *
Index: src/plugins/contrib/wxSmith/wxwidgets/defitems/wxspagesetupdialog.cpp
===================================================================
--- src/plugins/contrib/wxSmith/wxwidgets/defitems/wxspagesetupdialog.cpp	(revision 0)
+++ src/plugins/contrib/wxSmith/wxwidgets/defitems/wxspagesetupdialog.cpp	(revision 0)
@@ -0,0 +1,298 @@
+/** \file wxspagesetupdialog.cpp
+*
+* This file is part of wxSmith plugin for Code::Blocks Studio
+* Copyright (C) 2010  Gary Harris
+*
+* wxSmith is free software; you can redistribute it and/or modify
+* it under the terms of the GNU General Public License as published by
+* the Free Software Foundation; either version 3 of the License, or
+* (at your option) any later version.
+*
+* wxSmith is distributed in the hope that it will be useful,
+* but WITHOUT ANY WARRANTY; without even the implied warranty of
+* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+* GNU General Public License for more details.
+*
+* You should have received a copy of the GNU General Public License
+* along with wxSmith. If not, see <http://www.gnu.org/licenses/>.
+*
+*/
+
+#include "wxspagesetupdialog.h"
+#include "../wxsitemresdata.h"
+#include <wx/printdlg.h>
+
+namespace
+{
+    wxsRegisterItem<wxsPageSetupDialog> Reg(_T("PageSetupDialog"), wxsTTool, _T("Dialogs"), 130, false);
+}
+
+wxsPageSetupDialog::wxsPageSetupDialog(wxsItemResData* Data):
+    wxsTool(Data,&Reg.Info),
+	m_bEnableHelp(false),
+    m_bEnableMargins(true),
+	m_bEnableOrientation(true),
+    m_bEnablePaper(true),
+    m_bDefaultInfo(false),
+    m_bDefaultMinMargins(false),
+    m_bEnablePrinter(true),
+	m_iMarginLeft(-1),
+	m_iMarginTop(-1),
+	m_iMarginRight(-1),
+	m_iMarginBottom(-1),
+	m_iMarginMinLeft(-1),
+	m_iMarginMinTop(-1),
+	m_iMarginMinRight(-1),
+	m_iMarginMinBottom(-1),
+	m_iPaperID(wxPAPER_NONE),
+	m_iPaperWidth(-1),
+	m_iPaperHeight(-1)
+{
+	// Set up the array of paper IDs.
+	arrPaperIDs.Add(wxT("wxPAPER_NONE"));
+	arrPaperIDs.Add(wxT("wxPAPER_LETTER"));
+	arrPaperIDs.Add(wxT("wxPAPER_LEGAL"));
+	arrPaperIDs.Add(wxT("wxPAPER_A4"));
+	arrPaperIDs.Add(wxT("wxPAPER_CSHEET"));
+	arrPaperIDs.Add(wxT("wxPAPER_DSHEET"));
+	arrPaperIDs.Add(wxT("wxPAPER_ESHEET"));
+	arrPaperIDs.Add(wxT("wxPAPER_LETTERSMALL"));
+	arrPaperIDs.Add(wxT("wxPAPER_TABLOID"));
+	arrPaperIDs.Add(wxT("wxPAPER_LEDGER"));
+	arrPaperIDs.Add(wxT("wxPAPER_STATEMENT"));
+	arrPaperIDs.Add(wxT("wxPAPER_EXECUTIVE"));
+	arrPaperIDs.Add(wxT("wxPAPER_A3"));
+	arrPaperIDs.Add(wxT("wxPAPER_A4SMALL"));
+	arrPaperIDs.Add(wxT("wxPAPER_A5"));
+	arrPaperIDs.Add(wxT("wxPAPER_B4"));
+	arrPaperIDs.Add(wxT("wxPAPER_B5"));
+	arrPaperIDs.Add(wxT("wxPAPER_FOLIO"));
+	arrPaperIDs.Add(wxT("wxPAPER_QUARTO"));
+	arrPaperIDs.Add(wxT("wxPAPER_10X14"));
+	arrPaperIDs.Add(wxT("wxPAPER_11X17"));
+	arrPaperIDs.Add(wxT("wxPAPER_NOTE"));
+	arrPaperIDs.Add(wxT("wxPAPER_ENV_9"));
+	arrPaperIDs.Add(wxT("wxPAPER_ENV_10"));
+	arrPaperIDs.Add(wxT("wxPAPER_ENV_11"));
+	arrPaperIDs.Add(wxT("wxPAPER_ENV_12"));
+	arrPaperIDs.Add(wxT("wxPAPER_ENV_14"));
+	arrPaperIDs.Add(wxT("wxPAPER_ENV_DL"));
+	arrPaperIDs.Add(wxT("wxPAPER_ENV_C5"));
+	arrPaperIDs.Add(wxT("wxPAPER_ENV_C3"));
+	arrPaperIDs.Add(wxT("wxPAPER_ENV_C4"));
+	arrPaperIDs.Add(wxT("wxPAPER_ENV_C6"));
+	arrPaperIDs.Add(wxT("wxPAPER_ENV_C65"));
+	arrPaperIDs.Add(wxT("wxPAPER_ENV_B4"));
+	arrPaperIDs.Add(wxT("wxPAPER_ENV_B5"));
+	arrPaperIDs.Add(wxT("wxPAPER_ENV_B6"));
+	arrPaperIDs.Add(wxT("wxPAPER_ENV_ITALY"));
+	arrPaperIDs.Add(wxT("wxPAPER_ENV_MONARCH"));
+	arrPaperIDs.Add(wxT("wxPAPER_ENV_PERSONAL"));
+	arrPaperIDs.Add(wxT("wxPAPER_FANFOLD_US"));
+	arrPaperIDs.Add(wxT("wxPAPER_FANFOLD_STD_GERMAN"));
+	arrPaperIDs.Add(wxT("wxPAPER_FANFOLD_LGL_GERMAN"));
+}
+
+void wxsPageSetupDialog::OnBuildCreatingCode()
+{
+    switch ( GetLanguage() )
+    {
+        case wxsCPP:
+        {
+            AddHeader(_T("<wx/printdlg.h>"),GetInfo().ClassName,hfInPCH);
+
+			AddDeclaration(wxT("wxPageSetupDialogData  *pageSetupDialogData;"));
+            Codef(_T("\tpageSetupDialogData = new wxPageSetupDialogData;\n"));
+			// These functions are Windows only.
+			if((wxPlatformInfo::Get().GetOperatingSystemId() & wxOS_WINDOWS) > 0){
+				if(m_bEnableHelp){
+					Codef(_T("\tpageSetupDialogData->EnableHelp(%b);\n"), m_bEnableHelp);
+				}
+				if(!m_bEnableMargins){
+					Codef(_T("\tpageSetupDialogData->EnableMargins(%b);\n"), m_bEnableMargins);
+				}
+				if(!m_bEnableOrientation){
+					Codef(_T("\tpageSetupDialogData->EnableOrientation(%b);\n"), m_bEnableOrientation);
+				}
+				if(!m_bEnablePaper){
+					Codef(_T("\tpageSetupDialogData->EnablePaper(%b);\n"), m_bEnablePaper);
+				}
+				if(m_bDefaultInfo){
+					Codef(_T("\tpageSetupDialogData->SetDefaultInfo(%b);\n"), m_bDefaultInfo);
+				}
+				if(m_bDefaultMinMargins){
+					Codef(_T("\tpageSetupDialogData->SetDefaultMinMargins(%b);\n"), m_bDefaultMinMargins);
+				}
+			}
+
+			if(!m_bEnablePrinter){
+				Codef(_T("\tpageSetupDialogData->EnablePrinter(%b);\n"), m_bEnablePrinter);
+			}
+			if(m_iMarginLeft > -1 && m_iMarginTop > -1){
+				Codef(_T("\tpageSetupDialogData->SetMarginTopLeft(wxPoint(%d, %d));\n"), m_iMarginLeft, m_iMarginTop);
+			}
+			if(m_iMarginRight > -1 && m_iMarginBottom > -1){
+				Codef(_T("\tpageSetupDialogData->SetMarginBottomRight(wxPoint(%d, %d));\n"), m_iMarginRight, m_iMarginBottom);
+			}
+			// These functions are Windows only.
+			if((wxPlatformInfo::Get().GetOperatingSystemId() & wxOS_WINDOWS) > 0){
+				if(m_iMarginMinLeft > -1 && m_iMarginMinTop > -1){
+					Codef(_T("\tpageSetupDialogData->SetMinMarginTopLeft(wxPoint(%d, %d));\n"), m_iMarginMinLeft, m_iMarginMinTop);
+				}
+				if(m_iMarginMinRight > -1 && m_iMarginMinBottom > -1){
+					Codef(_T("\tpageSetupDialogData->SetMinMarginBottomRight(wxPoint(%d, %d));\n"), m_iMarginMinRight, m_iMarginMinBottom);
+				}
+			}
+			// If PaperId = wxPAPER_NONE and paper size = wxDefaultSize, the default system settings will be used.
+            if(m_iPaperID != wxPAPER_NONE){
+				// Set paper wxPAPER_NONE is not set.
+				#if wxCHECK_VERSION(2, 9, 0)
+				Codef(_T("\tpageSetupDialogData->SetPaperId(%s);\n"), arrPaperIDs[m_iPaperID].wx_str());
+				#else
+				Codef(_T("\tpageSetupDialogData->SetPaperId(%s);\n"), arrPaperIDs[m_iPaperID].c_str());
+				#endif
+            }
+            else{
+				// Set paper size if wxPAPER_NONE is set.
+				if(m_iPaperWidth != -1 && m_iPaperHeight != -1){
+					Codef(_T("\tpageSetupDialogData->SetPaperSize(wxSize(%d, %d));\n"), m_iPaperWidth, m_iPaperHeight);
+				}
+            }
+
+            Codef(_T("%C(%W, %v);\n"), wxT("pageSetupDialogData"));
+            BuildSetupWindowCode();
+            return;
+        }
+
+        default:
+        {
+            wxsCodeMarks::Unknown(_T("wxsPageSetupDialog::OnBuildCreatingCode"),GetLanguage());
+        }
+    }
+}
+
+void wxsPageSetupDialog::OnEnumToolProperties(long Flags)
+{
+    /*! \brief Paper IDs.
+     */
+	static const long PaperIDs[] = {
+		wxPAPER_NONE,
+		wxPAPER_LETTER,
+		wxPAPER_LEGAL,
+		wxPAPER_A4,
+		wxPAPER_CSHEET,
+		wxPAPER_DSHEET,
+		wxPAPER_ESHEET,
+		wxPAPER_LETTERSMALL,
+		wxPAPER_TABLOID,
+		wxPAPER_LEDGER,
+		wxPAPER_STATEMENT,
+		wxPAPER_EXECUTIVE,
+		wxPAPER_A3,
+		wxPAPER_A4SMALL,
+		wxPAPER_A5,
+		wxPAPER_B4,
+		wxPAPER_B5,
+		wxPAPER_FOLIO,
+		wxPAPER_QUARTO,
+		wxPAPER_10X14,
+		wxPAPER_11X17,
+		wxPAPER_NOTE,
+		wxPAPER_ENV_9,
+		wxPAPER_ENV_10,
+		wxPAPER_ENV_11,
+		wxPAPER_ENV_12,
+		wxPAPER_ENV_14,
+		wxPAPER_ENV_DL,
+		wxPAPER_ENV_C5,
+		wxPAPER_ENV_C3,
+		wxPAPER_ENV_C4,
+		wxPAPER_ENV_C6,
+		wxPAPER_ENV_C65,
+		wxPAPER_ENV_B4,
+		wxPAPER_ENV_B5,
+		wxPAPER_ENV_B6,
+		wxPAPER_ENV_ITALY,
+		wxPAPER_ENV_MONARCH,
+		wxPAPER_ENV_PERSONAL,
+		wxPAPER_FANFOLD_US,
+		wxPAPER_FANFOLD_STD_GERMAN,
+		wxPAPER_FANFOLD_LGL_GERMAN
+	};
+    /*! \brief Paper ID names.
+     */
+	static const wxChar* PaperIDNames[]  = {
+		_("Use specific dimensions"),
+		_("Letter, 8 1/2 by 11 inches"),
+		_("Legal, 8 1/2 by 14 inches"),
+		_("A4 Sheet, 210 by 297 millimeters"),
+		_("C Sheet, 17 by 22 inches"),
+		_("D Sheet, 22 by 34 inches"),
+		_("E Sheet, 34 by 44 inches"),
+		_("Letter Small, 8 1/2 by 11 inches"),
+		_("Tabloid, 11 by 17 inches"),
+		_("Ledger, 17 by 11 inches"),
+		_("Statement, 5 1/2 by 8 1/2 inches"),
+		_("Executive, 7 1/4 by 10 1/2 inches"),
+		_("A3 sheet, 297 by 420 millimeters"),
+		_("A4 small sheet, 210 by 297 millimeters"),
+		_("A5 sheet, 148 by 210 millimeters"),
+		_("B4 sheet, 250 by 354 millimeters"),
+		_("B5 sheet, 182-by-257-millimeter paper"),
+		_("Folio, 8-1/2-by-13-inch paper"),
+		_("Quarto, 215-by-275-millimeter paper"),
+		_("10-by-14-inch sheet"),
+		_("11-by-17-inch sheet"),
+		_("Note, 8 1/2 by 11 inches"),
+		_("#9 Envelope, 3 7/8 by 8 7/8 inches"),
+		_("#10 Envelope, 4 1/8 by 9 1/2 inches"),
+		_("#11 Envelope, 4 1/2 by 10 3/8 inches"),
+		_("#12 Envelope, 4 3/4 by 11 inches"),
+		_("#14 Envelope, 5 by 11 1/2 inches"),
+		_("DL Envelope, 110 by 220 millimeters"),
+		_("C5 Envelope, 162 by 229 millimeters"),
+		_("C3 Envelope, 324 by 458 millimeters"),
+		_("C4 Envelope, 229 by 324 millimeters"),
+		_("C6 Envelope, 114 by 162 millimeters"),
+		_("C65 Envelope, 114 by 229 millimeters"),
+		_("B4 Envelope, 250 by 353 millimeters"),
+		_("B5 Envelope, 176 by 250 millimeters"),
+		_("B6 Envelope, 176 by 125 millimeters"),
+		_("Italy Envelope, 110 by 230 millimeters"),
+		_("Monarch Envelope, 3 7/8 by 7 1/2 inches"),
+		_("6 3/4 Envelope, 3 5/8 by 6 1/2 inches"),
+		_("US Std Fanfold, 14 7/8 by 11 inches"),
+		_("German Std Fanfold, 8 1/2 by 12 inches"),
+		_("German Legal Fanfold, 8 1/2 by 13 inches"),
+		NULL
+	};
+
+
+	// These functions are Windows only.
+	if((wxPlatformInfo::Get().GetOperatingSystemId() & wxOS_WINDOWS) > 0){
+		WXS_BOOL(wxsPageSetupDialog, m_bDefaultInfo, _("Default Info"), _T("default_info"), false)
+		WXS_BOOL(wxsPageSetupDialog, m_bEnableHelp, _("Enable Help"), _T("enable_help"), false)
+		WXS_BOOL(wxsPageSetupDialog, m_bEnableMargins, _("Enable Margins"), _T("enable_margins"), true)
+	}
+	WXS_LONG(wxsPageSetupDialog, m_iMarginLeft,  _("Margin Left (mm)"), _T("margin_left"), -1)
+	WXS_LONG(wxsPageSetupDialog, m_iMarginTop,  _("Margin Top (mm)"), _T("margin_top"), -1)
+	WXS_LONG(wxsPageSetupDialog, m_iMarginRight,  _("Margin Right (mm)"), _T("margin_right"), -1)
+	WXS_LONG(wxsPageSetupDialog, m_iMarginBottom,  _("Margin Bottom (mm)"), _T("margin_bottom"), -1)
+	// These functions are Windows only.
+	if((wxPlatformInfo::Get().GetOperatingSystemId() & wxOS_WINDOWS) > 0){
+		WXS_BOOL(wxsPageSetupDialog, m_bDefaultMinMargins, _("Default Min. Margins"), _T("default_min_margins"), false)
+		WXS_LONG(wxsPageSetupDialog, m_iMarginMinLeft,  _("Min. Margin Left (mm)"), _T("min_margin_left"), -1)
+		WXS_LONG(wxsPageSetupDialog, m_iMarginMinTop,  _("Min. Margin Top (mm)"), _T("min_margin_top"), -1)
+		WXS_LONG(wxsPageSetupDialog, m_iMarginMinRight,  _("Min. Margin Right (mm)"), _T("min_margin_right"), -1)
+		WXS_LONG(wxsPageSetupDialog, m_iMarginMinBottom,  _("Min. Margin Bottom (mm)"), _T("min_margin_bottom"), -1)
+	}
+	// These functions are Windows only.
+	if((wxPlatformInfo::Get().GetOperatingSystemId() & wxOS_WINDOWS) > 0){
+		WXS_BOOL(wxsPageSetupDialog, m_bEnableOrientation, _("Enable Orientation"), _T("enable_orientation"), true)
+		WXS_BOOL(wxsPageSetupDialog, m_bEnablePaper, _("Enable Paper"), _T("enable_paper"), true)
+	}
+	WXS_ENUM(wxsPageSetupDialog, m_iPaperID, _("Paper ID"), _T("paper_id"), PaperIDs, PaperIDNames, wxPAPER_NONE)
+	WXS_LONG(wxsPageSetupDialog, m_iPaperWidth,  _("Paper Width"), _T("paper_width"), -1)
+	WXS_LONG(wxsPageSetupDialog, m_iPaperHeight,  _("Paper Height"), _T("paper_height"), -1)
+	WXS_BOOL(wxsPageSetupDialog, m_bEnablePrinter, _("Enable Printer"), _T("enable_printer"), true)
+}
Index: src/plugins/contrib/wxSmith/wxwidgets/defitems/wxspagesetupdialog.h
===================================================================
--- src/plugins/contrib/wxSmith/wxwidgets/defitems/wxspagesetupdialog.h	(revision 0)
+++ src/plugins/contrib/wxSmith/wxwidgets/defitems/wxspagesetupdialog.h	(revision 0)
@@ -0,0 +1,61 @@
+/** \file wxspagesetupdialog.h
+*
+* This file is part of wxSmith plugin for Code::Blocks Studio
+* Copyright (C) 2010  Gary Harris
+*
+* wxSmith is free software; you can redistribute it and/or modify
+* it under the terms of the GNU General Public License as published by
+* the Free Software Foundation; either version 3 of the License, or
+* (at your option) any later version.
+*
+* wxSmith is distributed in the hope that it will be useful,
+* but WITHOUT ANY WARRANTY; without even the implied warranty of
+* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+* GNU General Public License for more details.
+*
+* You should have received a copy of the GNU General Public License
+* along with wxSmith. If not, see <http://www.gnu.org/licenses/>.
+*
+*/
+
+#ifndef WXSPAGESETUPDIALOG_H
+#define WXSPAGESETUPDIALOG_H
+
+#include "../wxstool.h"
+
+/** \brief Class for wxPageSetupDialog dialogue. */
+class wxsPageSetupDialog: public wxsTool
+{
+    public:
+
+        wxsPageSetupDialog(wxsItemResData* Data);
+
+    private:
+
+        virtual void OnBuildCreatingCode();
+        virtual void OnEnumToolProperties(long Flags);
+
+        bool		m_bEnableHelp;				//!< Enable the help button.
+        bool		m_bEnableMargins;			//!< Enable the margin block.
+        bool		m_bEnableOrientation;		//!< Enable the orientation block.
+        bool		m_bEnablePaper;				//!< Enable the paper block.
+        bool		m_bDefaultInfo;					//!< Use default info. If true, the dialogue will simply return default printer information (such as orientation) instead of displaying.
+        bool		m_bDefaultMinMargins;		//!< Use the default margins.
+        bool		m_bEnablePrinter;				//!< Enable printer selection.
+		long		m_iMarginLeft;					//!< The left margin in mm.
+		long		m_iMarginTop;					//!< The top margin in mm.
+		long		m_iMarginRight;				//!< The right margin in mm.
+		long		m_iMarginBottom;				//!< The bottom margin in mm.
+		long		m_iMarginMinLeft;				//!< The minimum value for the left margin, in mm.
+		long		m_iMarginMinTop;				//!< The minimum value for the top margin, in mm.
+		long		m_iMarginMinRight;			//!< The minimum value for the right margin, in mm.
+		long		m_iMarginMinBottom;		//!< The minimum value for the bottom margin, in mm.
+		long		m_iPaperID;						//!< The paper ID.
+		long		m_iPaperWidth;					//!< The paper width.
+		long		m_iPaperHeight;				//!< The paper height.
+
+		wxArrayString arrPaperIDs;				//!< Array of paper ID constant names.
+
+};
+
+#endif
Index: src/plugins/contrib/wxSmith/wxwidgets/defitems/wxspasswordentrydialog.cpp
===================================================================
--- src/plugins/contrib/wxSmith/wxwidgets/defitems/wxspasswordentrydialog.cpp	(revision 0)
+++ src/plugins/contrib/wxSmith/wxwidgets/defitems/wxspasswordentrydialog.cpp	(revision 0)
@@ -0,0 +1,102 @@
+/** \file wxspasswordentrydialog.cpp
+*
+* This file is part of wxSmith plugin for Code::Blocks Studio
+* Copyright (C) 2010 Gary Harris
+*
+* wxSmith is free software; you can redistribute it and/or modify
+* it under the terms of the GNU General Public License as published by
+* the Free Software Foundation; either version 3 of the License, or
+* (at your option) any later version.
+*
+* wxSmith is distributed in the hope that it will be useful,
+* but WITHOUT ANY WARRANTY; without even the implied warranty of
+* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+* GNU General Public License for more details.
+*
+* You should have received a copy of the GNU General Public License
+* along with wxSmith. If not, see <http://www.gnu.org/licenses/>.
+*
+*/
+
+#include "../wxsitemresdata.h"
+#include "wxspasswordentrydialog.h"
+#include <wx/textdlg.h>
+
+
+namespace
+{
+    wxsRegisterItem<wxsPasswordEntryDialog> Reg(
+        _T("PasswordEntryDialog"),    	// Class base name
+        wxsTTool,                       				// Item type
+        _T("Dialogs"),                  			// Category in palette
+        120,                             					// Priority in palette
+        false);                         					// We do not allow this item inside XRC files
+
+
+    WXS_ST_BEGIN(wxsPasswordEntryDialogStyles, wxT("wxOK | wxCANCEL | wxCENTRE | wxWS_EX_VALIDATE_RECURSIVELY | wxTE_PASSWORD"));
+		WXS_ST_CATEGORY("wxPasswordEntryDialog")
+		WXS_ST(wxCANCEL)
+		WXS_ST(wxCENTRE)
+		WXS_ST(wxOK)
+		WXS_ST(wxTE_CENTRE)
+		WXS_ST(wxTE_NOHIDESEL)
+		WXS_ST(wxTE_RIGHT)
+		WXS_EXST(wxWS_EX_VALIDATE_RECURSIVELY)
+    WXS_ST_END()
+}
+
+/*! \brief Ctor
+ *
+ * \param Data wxsItemResData*	The control's resource data.
+ *
+ */
+wxsPasswordEntryDialog::wxsPasswordEntryDialog(wxsItemResData *Data):
+    wxsTool(Data,
+			&Reg.Info,
+			NULL,
+			wxsPasswordEntryDialogStyles,
+			(flVariable | flId | flSubclass | flExtraCode)),
+			m_sCaption(wxGetPasswordFromUserPromptStr),
+			m_sMessage(wxEmptyString),
+			m_sDefaultValue(wxEmptyString)
+{
+}
+
+/*! \brief Create the dialogue.
+ *
+ * \return void
+ *
+ */
+void wxsPasswordEntryDialog::OnBuildCreatingCode()
+{
+    switch(GetLanguage())
+    {
+        case wxsCPP:
+            AddHeader(_T("<wx/textdlg.h>"), GetInfo().ClassName, 0);
+
+            #if wxCHECK_VERSION(2, 9, 0)
+            Codef(_T("%C(%W, %t, %t, %t, %T, %P);\n"), m_sMessage.wx_str(), m_sCaption.wx_str(), m_sDefaultValue.wx_str());
+            #else
+            Codef(_T("%C(%W, %t, %t, %t, %T, %P);\n"), m_sMessage.c_str(), m_sCaption.c_str(), m_sDefaultValue.c_str());
+            #endif
+
+            BuildSetupWindowCode();
+            break;
+
+        default:
+            wxsCodeMarks::Unknown(_T("wxsPasswordEntryDialog::OnBuildCreatingCode"), GetLanguage());
+    }
+}
+
+/*! \brief Enumerate the dialogue's properties.
+ *
+ * \param flags long	The control flags.
+ * \return void
+ *
+ */
+void wxsPasswordEntryDialog::OnEnumToolProperties(long Flags)
+{
+    WXS_SHORT_STRING(wxsPasswordEntryDialog, m_sCaption, _("Caption"), _T("caption"), wxGetPasswordFromUserPromptStr, false);
+    WXS_SHORT_STRING(wxsPasswordEntryDialog, m_sMessage, _("Message"), _T("message"), wxEmptyString, false);
+    WXS_SHORT_STRING(wxsPasswordEntryDialog, m_sDefaultValue, _("Default Value"), _T("default_value"), wxEmptyString, false);
+}
Index: src/plugins/contrib/wxSmith/wxwidgets/defitems/wxspasswordentrydialog.h
===================================================================
--- src/plugins/contrib/wxSmith/wxwidgets/defitems/wxspasswordentrydialog.h	(revision 0)
+++ src/plugins/contrib/wxSmith/wxwidgets/defitems/wxspasswordentrydialog.h	(revision 0)
@@ -0,0 +1,43 @@
+/** \file wxspasswordentrydialog.h
+*
+* This file is part of wxSmith plugin for Code::Blocks Studio
+* Copyright (C) 2010 Gary Harris
+*
+* wxSmith is free software; you can redistribute it and/or modify
+* it under the terms of the GNU General Public License as published by
+* the Free Software Foundation; either version 3 of the License, or
+* (at your option) any later version.
+*
+* wxSmith is distributed in the hope that it will be useful,
+* but WITHOUT ANY WARRANTY; without even the implied warranty of
+* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+* GNU General Public License for more details.
+*
+* You should have received a copy of the GNU General Public License
+* along with wxSmith. If not, see <http://www.gnu.org/licenses/>.
+*
+*/
+
+#ifndef WXPASSWORDENTRYDIALOG_H
+#define WXPASSWORDENTRYDIALOG_H
+
+#include "../wxstool.h"
+
+/** \brief Class for wxPasswordEntryDialog dialogue. */
+class wxsPasswordEntryDialog: public wxsTool
+{
+    public:
+
+        wxsPasswordEntryDialog(wxsItemResData* Data);
+
+    private:
+
+        virtual void OnBuildCreatingCode();
+        virtual void OnEnumToolProperties(long Flags);
+
+        wxString m_sCaption;			//!< The caption text.
+        wxString m_sMessage;			//!< The message text.
+        wxString m_sDefaultValue;		//!< The default text to insert into the text box.
+};
+
+#endif      //  WXPASSWORDENTRYDIALOG_H
Index: src/plugins/contrib/wxSmith/wxwidgets/defitems/wxsprintdialog.cpp
===================================================================
--- src/plugins/contrib/wxSmith/wxwidgets/defitems/wxsprintdialog.cpp	(revision 0)
+++ src/plugins/contrib/wxSmith/wxwidgets/defitems/wxsprintdialog.cpp	(revision 0)
@@ -0,0 +1,133 @@
+/** \file wxsprintdialog.cpp
+*
+* This file is part of wxSmith plugin for Code::Blocks Studio
+* Copyright (C) 2010  Gary Harris
+*
+* wxSmith is free software; you can redistribute it and/or modify
+* it under the terms of the GNU General Public License as published by
+* the Free Software Foundation; either version 3 of the License, or
+* (at your option) any later version.
+*
+* wxSmith is distributed in the hope that it will be useful,
+* but WITHOUT ANY WARRANTY; without even the implied warranty of
+* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+* GNU General Public License for more details.
+*
+* You should have received a copy of the GNU General Public License
+* along with wxSmith. If not, see <http://www.gnu.org/licenses/>.
+*
+*/
+
+#include "wxsprintdialog.h"
+#include "../wxsitemresdata.h"
+#include <wx/printdlg.h>
+
+namespace
+{
+    wxsRegisterItem<wxsPrintDialog> Reg(_T("PrintDialog"), wxsTTool, _T("Dialogs"), 110, false);
+}
+
+/*! \brief Ctor
+ *
+ * \param Data wxsItemResData*	The control's resource data.
+ *
+ */
+wxsPrintDialog::wxsPrintDialog(wxsItemResData* Data):
+    wxsTool(Data,&Reg.Info),
+	m_bEnableHelp(false),
+	m_bEnablePageNumbers(true),
+	m_bEnablePrintToFile(true),
+	m_bEnableSelection(false),
+	m_bCollate(false),
+	m_bPrintToFile(false),
+	m_bSelection(false),
+	m_iFromPage(0),
+	m_iToPage(0),
+	m_iMinPage(0),
+	m_iMaxPage(0),
+	m_iNoCopies(1)
+{
+}
+
+/*! \brief Create the dialogue.
+ *
+ * \return void
+ *
+ */
+void wxsPrintDialog::OnBuildCreatingCode()
+{
+    switch ( GetLanguage() )
+    {
+        case wxsCPP:
+        {
+            AddHeader(_T("<wx/printdlg.h>"),GetInfo().ClassName,hfInPCH);
+
+			AddDeclaration(wxT("wxPrintDialogData  *printDialogData;"));
+            Codef(_T("\tprintDialogData = new wxPrintDialogData;\n"));
+			if(m_bEnableHelp){
+				Codef(_T("\tprintDialogData->EnableHelp(%b);\n"), m_bEnableHelp);
+			}
+			if(!m_bEnablePageNumbers){
+				Codef(_T("\tprintDialogData->EnablePageNumbers(%b);\n"), m_bEnablePageNumbers);
+			}
+			if(!m_bEnablePrintToFile){
+				Codef(_T("\tprintDialogData->EnablePrintToFile(%b);\n"), m_bEnablePrintToFile);
+			}
+			if(m_bEnableSelection){
+				Codef(_T("\tprintDialogData->EnableSelection(%b);\n"), m_bEnableSelection);
+				if(m_bSelection){
+					Codef(_T("\tprintDialogData->SetSelection(%b);\n"), m_bSelection);
+				}
+			}
+			if(m_bCollate){
+				Codef(_T("\tprintDialogData->SetCollate(%b);\n"), m_bCollate);
+			}
+			if(m_iFromPage > 0){
+				Codef(_T("\tprintDialogData->SetFromPage(%d);\n"), m_iFromPage);
+			}
+			if(m_iToPage > 0){
+				Codef(_T("\tprintDialogData->SetToPage(%d);\n"), m_iToPage);
+			}
+			if(m_iMinPage > 0){
+				Codef(_T("\tprintDialogData->SetMinPage(%d);\n"), m_iMinPage);
+			}
+			if(m_iMaxPage > 0){
+				Codef(_T("\tprintDialogData->SetMaxPage(%d);\n"), m_iMaxPage);
+			}
+			if(m_iNoCopies > 1){
+				Codef(_T("\tprintDialogData->SetNoCopies(%d);\n"), m_iNoCopies);
+			}
+
+			Codef(_T("%C(%W, %v);\n"), wxT("printDialogData"));
+            BuildSetupWindowCode();
+            return;
+        }
+
+        default:
+        {
+            wxsCodeMarks::Unknown(_T("wxsPrintDialog::OnBuildCreatingCode"),GetLanguage());
+        }
+    }
+}
+
+/*! \brief Enumerate the dialogue's properties.
+ *
+ * \param flags long	The control flags.
+ * \return void
+ *
+ */
+void wxsPrintDialog::OnEnumToolProperties(long Flags)
+{
+	WXS_BOOL(wxsPrintDialog, m_bEnableHelp, _("Enable Help"), _T("enable_help"), false)
+	WXS_BOOL(wxsPrintDialog, m_bEnablePageNumbers, _("Enable Page Numbers"), _T("enable_page_numbers"), true)
+	WXS_LONG(wxsPrintDialog, m_iFromPage,  _("From Page"), _T("from_page"), 0)
+	WXS_LONG(wxsPrintDialog, m_iToPage,  _("To Page"), _T("to_page"), 0)
+	WXS_LONG(wxsPrintDialog, m_iMinPage,  _("Min. Page"), _T("min_page"), 0)
+	WXS_LONG(wxsPrintDialog, m_iMaxPage,  _("Max. Page"), _T("max_page"), 0)
+	WXS_LONG(wxsPrintDialog, m_iNoCopies,  _("Number of Copies"), _T("number_of_copies"), 1)
+	WXS_BOOL(wxsPrintDialog, m_bCollate, _("Collate"), _T("collate"), false)
+	WXS_BOOL(wxsPrintDialog, m_bEnablePrintToFile, _("Enable Print To File"), _T("enable_print_to_file"), true)
+	WXS_BOOL(wxsPrintDialog, m_bPrintToFile, _("Print To File"), _T("print_to_file"), false)
+	WXS_BOOL(wxsPrintDialog, m_bEnableSelection, _("Enable Selection"), _T("enable_selection"), false)
+	WXS_BOOL(wxsPrintDialog, m_bSelection, _("Selection"), _T("selection"), false)
+}
Index: src/plugins/contrib/wxSmith/wxwidgets/defitems/wxsprintdialog.h
===================================================================
--- src/plugins/contrib/wxSmith/wxwidgets/defitems/wxsprintdialog.h	(revision 0)
+++ src/plugins/contrib/wxSmith/wxwidgets/defitems/wxsprintdialog.h	(revision 0)
@@ -0,0 +1,52 @@
+/** \file wxsprintdialog.h
+*
+* This file is part of wxSmith plugin for Code::Blocks Studio
+* Copyright (C) 2010  Gary Harris
+*
+* wxSmith is free software; you can redistribute it and/or modify
+* it under the terms of the GNU General Public License as published by
+* the Free Software Foundation; either version 3 of the License, or
+* (at your option) any later version.
+*
+* wxSmith is distributed in the hope that it will be useful,
+* but WITHOUT ANY WARRANTY; without even the implied warranty of
+* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+* GNU General Public License for more details.
+*
+* You should have received a copy of the GNU General Public License
+* along with wxSmith. If not, see <http://www.gnu.org/licenses/>.
+*
+*/
+
+#ifndef WXSPRINTDIALOG_H
+#define WXSPRINTDIALOG_H
+
+#include "../wxstool.h"
+
+/** \brief Class for wxPrintDialog dialogue. */
+class wxsPrintDialog: public wxsTool
+{
+    public:
+
+        wxsPrintDialog(wxsItemResData* Data);
+
+    private:
+
+        virtual void OnBuildCreatingCode();
+        virtual void OnEnumToolProperties(long Flags);
+
+        bool		m_bEnableHelp;				//!< Enable the help button.
+        bool		m_bEnablePageNumbers;	//!< Enable the page number block.
+        bool		m_bEnablePrintToFile;		//!< Enable the print to file block.
+        bool		m_bEnableSelection;			//!< Enable the selection block.
+        bool		m_bCollate;						//!< Whether to collate copies.
+        bool		m_bPrintToFile;					//!< Whether to print to file.
+        bool		m_bSelection;					//!< Whether to print the selection Results are implementation-dependent.
+        long		m_iFromPage;					//!< The page to print from.
+        long		m_iToPage;						//!< The page to print to.
+        long		m_iMinPage;						//!< The minimum page no. to print from.
+        long		m_iMaxPage;					//!< The maximum page no. to print to.
+        long		m_iNoCopies;					//!< The number of copies to print.
+};
+
+#endif
Index: src/plugins/contrib/wxSmith/wxwidgets/defitems/wxsprogressdialog.cpp
===================================================================
--- src/plugins/contrib/wxSmith/wxwidgets/defitems/wxsprogressdialog.cpp	(revision 0)
+++ src/plugins/contrib/wxSmith/wxwidgets/defitems/wxsprogressdialog.cpp	(revision 0)
@@ -0,0 +1,112 @@
+/** \file wxsprogressdialog.cpp
+*
+* This file is part of wxSmith plugin for Code::Blocks Studio
+* Copyright (C) 2010 Gary Harris
+*
+* wxSmith is free software; you can redistribute it and/or modify
+* it under the terms of the GNU General Public License as published by
+* the Free Software Foundation; either version 3 of the License, or
+* (at your option) any later version.
+*
+* wxSmith is distributed in the hope that it will be useful,
+* but WITHOUT ANY WARRANTY; without even the implied warranty of
+* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+* GNU General Public License for more details.
+*
+* You should have received a copy of the GNU General Public License
+* along with wxSmith. If not, see <http://www.gnu.org/licenses/>.
+*
+*/
+
+#include "../wxsitemresdata.h"
+#include "wxsprogressdialog.h"
+#include <wx/progdlg.h>
+
+
+namespace
+{
+    wxsRegisterItem<wxsProgressDialog> Reg(
+        _T("ProgressDialog"),       		// Class base name
+        wxsTTool,                       			// Item type
+        _T("Dialogs"),                  		// Category in palette
+        100,                             				// Priority in palette
+        false);                         				// We do not allow this item inside XRC files
+
+
+    WXS_ST_BEGIN(wxsProgressDialogStyles, wxT("wxPD_AUTO_HIDE | wxPD_APP_MODAL"));
+		WXS_ST_CATEGORY("wxProgressDialog")
+		WXS_ST(wxPD_APP_MODAL)
+		WXS_ST(wxPD_AUTO_HIDE)
+		WXS_ST(wxPD_CAN_ABORT)
+		WXS_ST(wxPD_CAN_SKIP)
+		WXS_ST(wxPD_ELAPSED_TIME)
+		WXS_ST(wxPD_ESTIMATED_TIME)
+		WXS_ST(wxPD_REMAINING_TIME)
+		WXS_ST(wxPD_SMOOTH)
+    WXS_ST_END()
+
+}
+
+/*! \brief Ctor
+ *
+ * \param Data wxsItemResData*	The control's resource data.
+ *
+ */
+wxsProgressDialog::wxsProgressDialog(wxsItemResData *Data):
+    wxsTool(Data,
+			&Reg.Info,
+			NULL,
+			wxsProgressDialogStyles,
+			(flVariable | flId | flSubclass | flExtraCode)),
+			m_sTitle(wxEmptyString),
+			m_sMessage(wxEmptyString),
+			m_iMaxValue(100),
+			m_bRunAtStartup(false)
+{
+}
+
+/*! \brief Create the dialogue.
+ *
+ * \return void
+ *
+ * This function either creates an uninitialised pointer or initialises and runs the dialogue at start-up,
+ * depending on the state of m_bRunAtStartup.
+ * There is no way to initialise the dialogue without having it run at the same time, by design.
+ */
+void wxsProgressDialog::OnBuildCreatingCode()
+{
+    switch(GetLanguage())
+    {
+        case wxsCPP:
+            AddHeader(_T("<wx/progdlg.h>"), GetInfo().ClassName, 0);
+
+			if(m_bRunAtStartup){
+				// Initialise and display the dialogue at application start-up.
+				#if wxCHECK_VERSION(2, 9, 0)
+				Codef(_T("%C(%t, %t, %d, %W, %T);\n"), m_sTitle.wx_str(), m_sMessage.wx_str(), m_iMaxValue);
+				#else
+				Codef(_T("%C(%t, %t, %d, %W, %T);\n"), m_sTitle.c_str(), m_sMessage.c_str(), m_iMaxValue);
+				#endif
+			}
+
+            BuildSetupWindowCode();
+            break;
+
+        default:
+            wxsCodeMarks::Unknown(_T("wxsProgressDialog::OnBuildCreatingCode"), GetLanguage());
+    }
+}
+
+/*! \brief Enumerate the dialogue's properties.
+ *
+ * \param flags long	The control flags.
+ * \return void
+ *
+ */
+void wxsProgressDialog::OnEnumToolProperties(long Flags)
+{
+	WXS_BOOL(wxsProgressDialog, m_bRunAtStartup, _("Run At Startup"), _T("run_at_startup"), false)
+    WXS_SHORT_STRING(wxsProgressDialog, m_sTitle, _("Title"), _T("title"), wxEmptyString, true);
+    WXS_SHORT_STRING(wxsProgressDialog, m_sMessage, _("Message"), _T("message"), wxEmptyString, true);
+	WXS_LONG(wxsProgressDialog, m_iMaxValue,  _("Max. Value"), _T("max_value"), 100)
+}
Index: src/plugins/contrib/wxSmith/wxwidgets/defitems/wxsprogressdialog.h
===================================================================
--- src/plugins/contrib/wxSmith/wxwidgets/defitems/wxsprogressdialog.h	(revision 0)
+++ src/plugins/contrib/wxSmith/wxwidgets/defitems/wxsprogressdialog.h	(revision 0)
@@ -0,0 +1,44 @@
+/** \file wxsprogressdialog.h
+*
+* This file is part of wxSmith plugin for Code::Blocks Studio
+* Copyright (C) 2010 Gary Harris
+*
+* wxSmith is free software; you can redistribute it and/or modify
+* it under the terms of the GNU General Public License as published by
+* the Free Software Foundation; either version 3 of the License, or
+* (at your option) any later version.
+*
+* wxSmith is distributed in the hope that it will be useful,
+* but WITHOUT ANY WARRANTY; without even the implied warranty of
+* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+* GNU General Public License for more details.
+*
+* You should have received a copy of the GNU General Public License
+* along with wxSmith. If not, see <http://www.gnu.org/licenses/>.
+*
+*/
+
+#ifndef WXSPROGRESSDIALOG_H
+#define WXSPROGRESSDIALOG_H
+
+#include "../wxstool.h"
+
+/** \brief Class for wxProgressDialog dialogue. */
+class wxsProgressDialog: public wxsTool
+{
+    public:
+
+        wxsProgressDialog(wxsItemResData* Data);
+
+    private:
+
+        virtual void OnBuildCreatingCode();
+        virtual void OnEnumToolProperties(long Flags);
+
+        wxString 	m_sTitle;				//!< The dialogue's title.
+        wxString 	m_sMessage;		//!< The dialogue message.
+        long			m_iMaxValue;		//!< The maximum progress value.
+        bool			m_bRunAtStartup;	//!< Run the dialogue at start-up. If false, the pointer is set to null and must be initialised by the user.
+};
+
+#endif      //  WXSPROGRESSDIALOG_H
Index: src/plugins/contrib/wxSmith/wxwidgets/defitems/wxsrichtextformattingdialog.cpp
===================================================================
--- src/plugins/contrib/wxSmith/wxwidgets/defitems/wxsrichtextformattingdialog.cpp	(revision 0)
+++ src/plugins/contrib/wxSmith/wxwidgets/defitems/wxsrichtextformattingdialog.cpp	(revision 0)
@@ -0,0 +1,123 @@
+/** \file wxsrichtextformattingdialog.cpp
+*
+* This file is part of wxSmith plugin for Code::Blocks Studio
+* Copyright (C) 2010 Gary Harris
+*
+* wxSmith is free software; you can redistribute it and/or modify
+* it under the terms of the GNU General Public License as published by
+* the Free Software Foundation; either version 3 of the License, or
+* (at your option) any later version.
+*
+* wxSmith is distributed in the hope that it will be useful,
+* but WITHOUT ANY WARRANTY; without even the implied warranty of
+* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+* GNU General Public License for more details.
+*
+* You should have received a copy of the GNU General Public License
+* along with wxSmith. If not, see <http://www.gnu.org/licenses/>.
+*
+*/
+
+#include "../wxsitemresdata.h"
+#include "wxsrichtextformattingdialog.h"
+#include <wx/richtext/richtextformatdlg.h>
+
+
+namespace
+{
+    wxsRegisterItem<wxsRichTextFormattingDialog> Reg(
+        _T("RichTextFormattingDialog"),      // Class base name
+        wxsTTool,                       						// Item type
+        _T("Dialogs"),                  					// Category in palette
+        90,                             								// Priority in palette
+        false);                         							// We do not allow this item inside XRC files
+
+    static const long arrPageValues[] = {
+		wxRICHTEXT_FORMAT_BULLETS,
+		wxRICHTEXT_FORMAT_FONT,
+		wxRICHTEXT_FORMAT_HELP_BUTTON,
+		wxRICHTEXT_FORMAT_INDENTS_SPACING,
+		wxRICHTEXT_FORMAT_LIST_STYLE,
+    	wxRICHTEXT_FORMAT_STYLE_EDITOR,
+		wxRICHTEXT_FORMAT_TABS
+	};
+
+    static const wxChar* arrPageValueNames[] = {
+		_T("wxRICHTEXT_FORMAT_BULLETS"),
+    	_T("wxRICHTEXT_FORMAT_FONT"),
+		_T("wxRICHTEXT_FORMAT_HELP_BUTTON"),
+		_T("wxRICHTEXT_FORMAT_INDENTS_SPACING"),
+		_T("wxRICHTEXT_FORMAT_LIST_STYLE"),
+    	_T("wxRICHTEXT_FORMAT_STYLE_EDITOR"),
+    	_T("wxRICHTEXT_FORMAT_TABS"),
+		NULL
+	};
+}
+
+/*! \brief Ctor
+ *
+ * \param Data wxsItemResData*	The control's resource data.
+ *
+ */
+wxsRichTextFormattingDialog::wxsRichTextFormattingDialog(wxsItemResData *Data):
+    wxsTool(Data,
+			&Reg.Info,
+			NULL,
+			NULL,
+			(flVariable | flId | flSubclass | flExtraCode)),
+			m_sTitle(_T("Formatting")),
+			m_iFlags(wxRICHTEXT_FORMAT_FONT|wxRICHTEXT_FORMAT_TABS|wxRICHTEXT_FORMAT_BULLETS|wxRICHTEXT_FORMAT_INDENTS_SPACING)
+{
+}
+
+/*! \brief Create the dialogue.
+ *
+ * \return void
+ *
+ */
+void wxsRichTextFormattingDialog::OnBuildCreatingCode()
+{
+	wxString sFlags;
+    switch(GetLanguage())
+    {
+        case wxsCPP:
+            AddHeader(_T("<wx/richtext/richtextformatdlg.h>"), GetInfo().ClassName, 0);
+
+            for(int i = 0;arrPageValueNames[i];i++){
+                if(m_iFlags & arrPageValues[i]){
+                	sFlags << arrPageValueNames[i] << _T("|");
+                }
+            }
+			if(sFlags.IsEmpty()){
+				sFlags = _T("0");
+			}
+            else{
+				sFlags.RemoveLast();
+            }
+
+			#if wxCHECK_VERSION(2, 9, 0)
+            Codef(_T("%C(%s, %W, %t, %I, %P, %S, %T);\n"), sFlags.wx_str(), m_sTitle.wx_str());
+			#else
+            Codef(_T("%C(%s, %W, %t, %I, %P, %S, %T);\n"), sFlags.c_str(), m_sTitle.c_str());
+			#endif
+
+            BuildSetupWindowCode();
+            break;
+
+        default:
+            wxsCodeMarks::Unknown(_T("wxsRichTextFormattingDialog::OnBuildCreatingCode"), GetLanguage());
+    }
+}
+
+/*! \brief Enumerate the dialogue's properties.
+ *
+ * \param flags long	The control flags.
+ * \return void
+ *
+ */
+void wxsRichTextFormattingDialog::OnEnumToolProperties(long Flags)
+{
+	WXS_FLAGS(wxsRichTextFormattingDialog, m_iFlags, _("Page Flags"), _T("page_flags"), arrPageValues, arrPageValueNames,
+								wxRICHTEXT_FORMAT_FONT|wxRICHTEXT_FORMAT_TABS|wxRICHTEXT_FORMAT_BULLETS|wxRICHTEXT_FORMAT_INDENTS_SPACING )
+    WXS_SHORT_STRING(wxsRichTextFormattingDialog, m_sTitle, _("Title"), _T("title"), _("Formatting"), true);
+}
Index: src/plugins/contrib/wxSmith/wxwidgets/defitems/wxsrichtextformattingdialog.h
===================================================================
--- src/plugins/contrib/wxSmith/wxwidgets/defitems/wxsrichtextformattingdialog.h	(revision 0)
+++ src/plugins/contrib/wxSmith/wxwidgets/defitems/wxsrichtextformattingdialog.h	(revision 0)
@@ -0,0 +1,42 @@
+/** \file wxsrichtextformattingdialog.h
+*
+* This file is part of wxSmith plugin for Code::Blocks Studio
+* Copyright (C) 2010 Gary Harris
+*
+* wxSmith is free software; you can redistribute it and/or modify
+* it under the terms of the GNU General Public License as published by
+* the Free Software Foundation; either version 3 of the License, or
+* (at your option) any later version.
+*
+* wxSmith is distributed in the hope that it will be useful,
+* but WITHOUT ANY WARRANTY; without even the implied warranty of
+* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+* GNU General Public License for more details.
+*
+* You should have received a copy of the GNU General Public License
+* along with wxSmith. If not, see <http://www.gnu.org/licenses/>.
+*
+*/
+
+#ifndef WXSRICHTEXTFORMATTINGDIALOG_H
+#define WXSRICHTEXTFORMATTINGDIALOG_H
+
+#include "../wxstool.h"
+
+/** \brief Class for wxRichTextFormattingDialog dialogue. */
+class wxsRichTextFormattingDialog: public wxsTool
+{
+    public:
+
+        wxsRichTextFormattingDialog(wxsItemResData* Data);
+
+    private:
+
+        virtual void OnBuildCreatingCode();
+        virtual void OnEnumToolProperties(long Flags);
+
+        wxString 	m_sTitle;				//!< The dialogue's caption.
+		long			m_iFlags;				//!< Page flags.
+};
+
+#endif      //  WXSRICHTEXTFORMATTINGDIALOG_H
Index: src/plugins/contrib/wxSmith/wxwidgets/defitems/wxsrichtextstyleorganiserdialog.cpp
===================================================================
--- src/plugins/contrib/wxSmith/wxwidgets/defitems/wxsrichtextstyleorganiserdialog.cpp	(revision 0)
+++ src/plugins/contrib/wxSmith/wxwidgets/defitems/wxsrichtextstyleorganiserdialog.cpp	(revision 0)
@@ -0,0 +1,142 @@
+/** \file wxsrichtextstyleorganiserdialog.cpp
+*
+* This file is part of wxSmith plugin for Code::Blocks Studio
+* Copyright (C) 2010 Gary Harris
+*
+* wxSmith is free software; you can redistribute it and/or modify
+* it under the terms of the GNU General Public License as published by
+* the Free Software Foundation; either version 3 of the License, or
+* (at your option) any later version.
+*
+* wxSmith is distributed in the hope that it will be useful,
+* but WITHOUT ANY WARRANTY; without even the implied warranty of
+* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+* GNU General Public License for more details.
+*
+* You should have received a copy of the GNU General Public License
+* along with wxSmith. If not, see <http://www.gnu.org/licenses/>.
+*
+*/
+
+#include "../wxsitemresdata.h"
+#include "wxsrichtextstyleorganiserdialog.h"
+#include <wx/richtext/richtextstyledlg.h>
+
+
+namespace
+{
+    wxsRegisterItem<wxsRichTextStyleOrganiserDialog> Reg(
+        _T("RichTextStyleOrganiserDialog"),      // Class base name
+        wxsTTool,                       								// Item type
+        _T("Dialogs"),                  							// Category in palette
+        80,                             										// Priority in palette
+        false);                         									// We do not allow this item inside XRC files
+
+    static const long arrStyleValues[] = {
+		wxRICHTEXT_ORGANISER_APPLY_STYLES,
+		wxRICHTEXT_ORGANISER_CREATE_STYLES,
+		wxRICHTEXT_ORGANISER_DELETE_STYLES,
+		wxRICHTEXT_ORGANISER_EDIT_STYLES,
+		wxRICHTEXT_ORGANISER_OK_CANCEL,
+		wxRICHTEXT_ORGANISER_RENAME_STYLES,
+		wxRICHTEXT_ORGANISER_RENUMBER,
+		wxRICHTEXT_ORGANISER_SHOW_ALL,
+		wxRICHTEXT_ORGANISER_SHOW_CHARACTER,
+		wxRICHTEXT_ORGANISER_SHOW_LIST,
+		wxRICHTEXT_ORGANISER_SHOW_PARAGRAPH
+	};
+
+    static const wxChar* arrStyleValueNames[] = {
+    	_T("wxRICHTEXT_ORGANISER_APPLY_STYLES"),
+    	_T("wxRICHTEXT_ORGANISER_CREATE_STYLES"),
+    	_T("wxRICHTEXT_ORGANISER_DELETE_STYLES"),
+		_T("wxRICHTEXT_ORGANISER_EDIT_STYLES"),
+		_T("wxRICHTEXT_ORGANISER_OK_CANCEL"),
+		_T("wxRICHTEXT_ORGANISER_RENAME_STYLES"),
+		_T("wxRICHTEXT_ORGANISER_RENUMBER"),
+		_T("wxRICHTEXT_ORGANISER_SHOW_ALL"),
+		_T("wxRICHTEXT_ORGANISER_SHOW_CHARACTER"),
+		_T("wxRICHTEXT_ORGANISER_SHOW_LIST"),
+		_T("wxRICHTEXT_ORGANISER_SHOW_PARAGRAPH"),
+		NULL
+	};
+}
+
+/*! \brief Ctor
+ *
+ * \param Data wxsItemResData*	The control's resource data.
+ *
+ */
+wxsRichTextStyleOrganiserDialog::wxsRichTextStyleOrganiserDialog(wxsItemResData *Data):
+    wxsTool(Data,
+			&Reg.Info,
+			NULL,
+			NULL,
+			(flVariable | flId | flSubclass | flExtraCode)),
+			m_sCaption(SYMBOL_WXRICHTEXTSTYLEORGANISERDIALOG_TITLE),
+			m_iFlags(wxRICHTEXT_ORGANISER_SHOW_ALL|wxRICHTEXT_ORGANISER_DELETE_STYLES|wxRICHTEXT_ORGANISER_CREATE_STYLES|
+								wxRICHTEXT_ORGANISER_APPLY_STYLES|wxRICHTEXT_ORGANISER_EDIT_STYLES|wxRICHTEXT_ORGANISER_RENAME_STYLES)
+{
+}
+
+/*! \brief Create the dialogue.
+ *
+ * \return void
+ *
+ */
+void wxsRichTextStyleOrganiserDialog::OnBuildCreatingCode()
+{
+	wxString sFlags;
+    switch(GetLanguage())
+    {
+        case wxsCPP:
+            AddHeader(_T(" <wx/richtext/richtextstyledlg.h>"), GetInfo().ClassName, 0);
+
+            for(int i = 0;arrStyleValueNames[i];i++){
+                if(m_iFlags & arrStyleValues[i]){
+                	sFlags << arrStyleValueNames[i] << _T("|");
+                }
+            }
+			if(sFlags.IsEmpty()){
+				sFlags = _T("0");
+			}
+            else{
+				sFlags.RemoveLast();
+            }
+
+			#if wxCHECK_VERSION(2, 9, 0)
+            Codef(_T("%C(%s, NULL, NULL, %W, %I, %t, ")
+							wxT("SYMBOL_WXRICHTEXTSTYLEORGANISERDIALOG_POSITION, ")
+							wxT("SYMBOL_WXRICHTEXTSTYLEORGANISERDIALOG_SIZE, ")
+							wxT("SYMBOL_WXRICHTEXTSTYLEORGANISERDIALOG_STYLE);\n"),
+							sFlags.wx_str(), m_sCaption.wx_str());
+			#else
+            Codef(_T("%C(%s, NULL, NULL, %W, %I, %t, ")
+							wxT("SYMBOL_WXRICHTEXTSTYLEORGANISERDIALOG_POSITION, ")
+							wxT("SYMBOL_WXRICHTEXTSTYLEORGANISERDIALOG_SIZE, ")
+							wxT("SYMBOL_WXRICHTEXTSTYLEORGANISERDIALOG_STYLE);\n"),
+							sFlags.c_str(), m_sCaption.c_str());
+			#endif
+
+            BuildSetupWindowCode();
+            break;
+
+        default:
+            wxsCodeMarks::Unknown(_T("wxsRichTextStyleOrganiserDialog::OnBuildCreatingCode"), GetLanguage());
+    }
+}
+
+/*! \brief Enumerate the dialogue's properties.
+ *
+ * \param flags long	The control flags.
+ * \return void
+ *
+ */
+void wxsRichTextStyleOrganiserDialog::OnEnumToolProperties(long Flags)
+{
+    // Default to wxRICHTEXT_ORGANISER_ORGANISE.
+	WXS_FLAGS(wxsRichTextStyleOrganiserDialog, m_iFlags, _("Style Flags"), _T("style_flags"), arrStyleValues, arrStyleValueNames,
+														wxRICHTEXT_ORGANISER_SHOW_ALL|wxRICHTEXT_ORGANISER_DELETE_STYLES|wxRICHTEXT_ORGANISER_CREATE_STYLES
+														|wxRICHTEXT_ORGANISER_APPLY_STYLES|wxRICHTEXT_ORGANISER_EDIT_STYLES|wxRICHTEXT_ORGANISER_RENAME_STYLES )
+    WXS_SHORT_STRING(wxsRichTextStyleOrganiserDialog, m_sCaption, _("Caption"), _T("caption"), SYMBOL_WXRICHTEXTSTYLEORGANISERDIALOG_TITLE, true);
+}
Index: src/plugins/contrib/wxSmith/wxwidgets/defitems/wxsrichtextstyleorganiserdialog.h
===================================================================
--- src/plugins/contrib/wxSmith/wxwidgets/defitems/wxsrichtextstyleorganiserdialog.h	(revision 0)
+++ src/plugins/contrib/wxSmith/wxwidgets/defitems/wxsrichtextstyleorganiserdialog.h	(revision 0)
@@ -0,0 +1,42 @@
+/** \file wxsrichtextstyleorganiserdialog.h
+*
+* This file is part of wxSmith plugin for Code::Blocks Studio
+* Copyright (C) 2010 Gary Harris
+*
+* wxSmith is free software; you can redistribute it and/or modify
+* it under the terms of the GNU General Public License as published by
+* the Free Software Foundation; either version 3 of the License, or
+* (at your option) any later version.
+*
+* wxSmith is distributed in the hope that it will be useful,
+* but WITHOUT ANY WARRANTY; without even the implied warranty of
+* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+* GNU General Public License for more details.
+*
+* You should have received a copy of the GNU General Public License
+* along with wxSmith. If not, see <http://www.gnu.org/licenses/>.
+*
+*/
+
+#ifndef WXSRICHTEXTSTYLEORGANISERDIALOG_H
+#define WXSRICHTEXTSTYLEORGANISERDIALOG_H
+
+#include "../wxstool.h"
+
+/** \brief Class for wxRichTextStyleOrganiserDialog dialogue. */
+class wxsRichTextStyleOrganiserDialog: public wxsTool
+{
+    public:
+
+        wxsRichTextStyleOrganiserDialog(wxsItemResData* Data);
+
+    private:
+
+        virtual void OnBuildCreatingCode();
+        virtual void OnEnumToolProperties(long Flags);
+
+        wxString 	m_sCaption;		//!< The dialogue's caption.
+		long			m_iFlags;				//!< Page flags.
+};
+
+#endif      //  WXSRICHTEXTSTYLEORGANISERDIALOG_H
Index: src/plugins/contrib/wxSmith/wxwidgets/defitems/wxssinglechoicedialog.cpp
===================================================================
--- src/plugins/contrib/wxSmith/wxwidgets/defitems/wxssinglechoicedialog.cpp	(revision 6328)
+++ src/plugins/contrib/wxSmith/wxwidgets/defitems/wxssinglechoicedialog.cpp	(working copy)
@@ -1,4 +1,5 @@
-/*
+/** \file wxssinglechoicedialog.cpp
+*
 * This file is part of wxSmith plugin for Code::Blocks Studio
 * Copyright (C) 2007  Bartlomiej Swiecki
 *
@@ -26,7 +27,7 @@
 
 namespace
 {
-    wxsRegisterItem<wxsSingleChoiceDialog> Reg(_T("SingleChoiceDialog"),wxsTTool,_T("Dialogs"),50,false);
+    wxsRegisterItem<wxsSingleChoiceDialog> Reg(_T("SingleChoiceDialog"),wxsTTool,_T("Dialogs"),70,false);
 
     WXS_ST_BEGIN(wxsSingleChoiceDialogStyles,_T("wxCHOICEDLG_STYLE"))
         WXS_ST_CATEGORY("wxSingleChoiceDialog")
Index: src/plugins/contrib/wxSmith/wxwidgets/defitems/wxssinglechoicedialog.h
===================================================================
--- src/plugins/contrib/wxSmith/wxwidgets/defitems/wxssinglechoicedialog.h	(revision 6328)
+++ src/plugins/contrib/wxSmith/wxwidgets/defitems/wxssinglechoicedialog.h	(working copy)
@@ -1,4 +1,5 @@
-/*
+/** \file wxssinglechoicedialog.h
+*
 * This file is part of wxSmith plugin for Code::Blocks Studio
 * Copyright (C) 2007  Bartlomiej Swiecki
 *
Index: src/plugins/contrib/wxSmith/wxwidgets/defitems/wxssymbolpickerdialog.cpp
===================================================================
--- src/plugins/contrib/wxSmith/wxwidgets/defitems/wxssymbolpickerdialog.cpp	(revision 6328)
+++ src/plugins/contrib/wxSmith/wxwidgets/defitems/wxssymbolpickerdialog.cpp	(working copy)
@@ -1,4 +1,5 @@
-/*
+/** \file wxssymbolpickerdialog.cpp
+*
 * This file is part of wxSmith plugin for Code::Blocks Studio
 * Copyright (C) 2008 Ron Collins
 *
@@ -29,7 +30,7 @@
         _T("SymbolPickerDialog"),       // Class base name
         wxsTTool,                       // Item type
         _T("Dialogs"),                  // Category in palette
-        40,                             // Priority in palette
+        60,                             // Priority in palette
         false);                         // We do not allow this item inside XRC files
 
 
Index: src/plugins/contrib/wxSmith/wxwidgets/defitems/wxssymbolpickerdialog.h
===================================================================
--- src/plugins/contrib/wxSmith/wxwidgets/defitems/wxssymbolpickerdialog.h	(revision 6328)
+++ src/plugins/contrib/wxSmith/wxwidgets/defitems/wxssymbolpickerdialog.h	(working copy)
@@ -1,4 +1,5 @@
-/*
+/** \file wxssymbolpickerdialog.h
+*
 * This file is part of wxSmith plugin for Code::Blocks Studio
 * Copyright (C) 2008 Ron Collins
 *
Index: src/plugins/contrib/wxSmith/wxwidgets/defitems/wxstextentrydialog.cpp
===================================================================
--- src/plugins/contrib/wxSmith/wxwidgets/defitems/wxstextentrydialog.cpp	(revision 0)
+++ src/plugins/contrib/wxSmith/wxwidgets/defitems/wxstextentrydialog.cpp	(revision 0)
@@ -0,0 +1,112 @@
+/** \file wxstextentrydialog.cpp
+*
+* This file is part of wxSmith plugin for Code::Blocks Studio
+* Copyright (C) 2010 Gary Harris
+*
+* wxSmith is free software; you can redistribute it and/or modify
+* it under the terms of the GNU General Public License as published by
+* the Free Software Foundation; either version 3 of the License, or
+* (at your option) any later version.
+*
+* wxSmith is distributed in the hope that it will be useful,
+* but WITHOUT ANY WARRANTY; without even the implied warranty of
+* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+* GNU General Public License for more details.
+*
+* You should have received a copy of the GNU General Public License
+* along with wxSmith. If not, see <http://www.gnu.org/licenses/>.
+*
+*/
+
+#include "../wxsitemresdata.h"
+#include "wxstextentrydialog.h"
+#include <wx/textdlg.h>
+
+
+namespace
+{
+    wxsRegisterItem<wxsTextEntryDialog> Reg(
+        _T("TextEntryDialog"),       		// Class base name
+        wxsTTool,                       		// Item type
+        _T("Dialogs"),                  		// Category in palette
+        50,                             			// Priority in palette
+        false);                         			// We do not allow this item inside XRC files
+
+
+    WXS_ST_BEGIN(wxsTextEntryDialogStyles, wxT("wxOK | wxCANCEL | wxCENTRE | wxWS_EX_VALIDATE_RECURSIVELY"));
+		WXS_ST_CATEGORY("wxTextEntryDialog")
+		WXS_ST(wxOK)
+		WXS_ST(wxCANCEL)
+		WXS_ST(wxCENTRE)
+		WXS_ST(wxWS_EX_VALIDATE_RECURSIVELY)
+		WXS_ST(wxTE_MULTILINE)
+		WXS_ST(wxTE_PASSWORD)
+		WXS_ST(wxTE_READONLY)
+		WXS_ST(wxTE_RICH)
+		WXS_ST(wxTE_RICH2)
+		WXS_ST(wxTE_NOHIDESEL)
+		WXS_ST(wxHSCROLL)
+		WXS_ST(wxTE_CENTRE)
+		WXS_ST(wxTE_RIGHT)
+		WXS_ST(wxTE_CHARWRAP)
+		WXS_ST(wxTE_WORDWRAP)
+		WXS_ST(wxTE_BESTWRAP)
+		WXS_ST(wxTE_CAPITALIZE)
+    WXS_ST_END()
+}
+
+/*! \brief Ctor
+ *
+ * \param Data wxsItemResData*	The control's resource data.
+ *
+ */
+wxsTextEntryDialog::wxsTextEntryDialog(wxsItemResData *Data):
+    wxsTool(Data,
+			&Reg.Info,
+			NULL,
+			wxsTextEntryDialogStyles,
+			(flVariable | flId | flSubclass | flExtraCode)),
+			m_sCaption(wxGetTextFromUserPromptStr),
+			m_sMessage(wxEmptyString),
+			m_sDefaultValue(wxEmptyString)
+{
+}
+
+/*! \brief Create the dialogue.
+ *
+ * \return void
+ *
+ */
+void wxsTextEntryDialog::OnBuildCreatingCode()
+{
+    switch(GetLanguage())
+    {
+        case wxsCPP:
+            AddHeader(_T("<wx/textdlg.h>"), GetInfo().ClassName, 0);
+
+            #if wxCHECK_VERSION(2, 9, 0)
+            Codef(_T("%C(%W, %t, %t, %t, %T, %P);\n"), m_sMessage.wx_str(), m_sCaption.wx_str(), m_sDefaultValue.wx_str());
+            #else
+            Codef(_T("%C(%W, %t, %t, %t, %T, %P);\n"), m_sMessage.c_str(), m_sCaption.c_str(), m_sDefaultValue.c_str());
+            #endif
+
+            BuildSetupWindowCode();
+            break;
+
+        default:
+            wxsCodeMarks::Unknown(_T("wxsTextEntryDialog::OnBuildCreatingCode"), GetLanguage());
+    }
+}
+
+/*! \brief Enumerate the dialogue's properties.
+ *
+ * \param flags long	The control flags.
+ * \return void
+ *
+ */
+void wxsTextEntryDialog::OnEnumToolProperties(long Flags)
+{
+    WXS_SHORT_STRING(wxsTextEntryDialog, m_sCaption, _("Caption"), _T("caption"), wxGetTextFromUserPromptStr, false);
+    WXS_SHORT_STRING(wxsTextEntryDialog, m_sMessage, _("Message"), _T("message"), wxEmptyString, false);
+    WXS_SHORT_STRING(wxsTextEntryDialog, m_sDefaultValue, _("Default Value"), _T("default_value"), wxEmptyString, false);
+}
Index: src/plugins/contrib/wxSmith/wxwidgets/defitems/wxstextentrydialog.h
===================================================================
--- src/plugins/contrib/wxSmith/wxwidgets/defitems/wxstextentrydialog.h	(revision 0)
+++ src/plugins/contrib/wxSmith/wxwidgets/defitems/wxstextentrydialog.h	(revision 0)
@@ -0,0 +1,43 @@
+/** \file wxstextentrydialog.h
+*
+* This file is part of wxSmith plugin for Code::Blocks Studio
+* Copyright (C) 2010 Gary Harris
+*
+* wxSmith is free software; you can redistribute it and/or modify
+* it under the terms of the GNU General Public License as published by
+* the Free Software Foundation; either version 3 of the License, or
+* (at your option) any later version.
+*
+* wxSmith is distributed in the hope that it will be useful,
+* but WITHOUT ANY WARRANTY; without even the implied warranty of
+* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+* GNU General Public License for more details.
+*
+* You should have received a copy of the GNU General Public License
+* along with wxSmith. If not, see <http://www.gnu.org/licenses/>.
+*
+*/
+
+#ifndef WXTEXTENTRYDIALOG_H
+#define WXTEXTENTRYDIALOG_H
+
+#include "../wxstool.h"
+
+/** \brief Class for wxTextEntryDialog dialogue. */
+class wxsTextEntryDialog: public wxsTool
+{
+    public:
+
+        wxsTextEntryDialog(wxsItemResData* Data);
+
+    private:
+
+        virtual void OnBuildCreatingCode();
+        virtual void OnEnumToolProperties(long Flags);
+
+        wxString m_sCaption;			//!< The caption text.
+        wxString m_sMessage;			//!< The message text.
+        wxString m_sDefaultValue;		//!< The default text to insert into the text box.
+};
+
+#endif      //  WXTEXTENTRYDIALOG_H
