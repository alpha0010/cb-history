Index: resources/sdl/files/main.cpp
===================================================================
--- resources/sdl/files/main.cpp	(revision 6196)
+++ resources/sdl/files/main.cpp	(working copy)
@@ -3,11 +3,8 @@
 #else
     #include <stdlib.h>
 #endif
-#ifdef __APPLE__
+
 #include <SDL/SDL.h>
-#else
-#include <SDL.h>
-#endif
 
 int main ( int argc, char** argv )
 {
Index: resources/sdl/wizard.script
===================================================================
--- resources/sdl/wizard.script	(revision 6196)
+++ resources/sdl/wizard.script	(working copy)
@@ -47,7 +47,7 @@
         local dir_nomacro_inc = GetCompilerIncludeDir(dir, SDLPathDefault, SDLPathDefaultInc);
         if (dir_nomacro_inc.IsEmpty())
             return false;
-        if (!VerifyFile(dir_nomacro_inc, _T("SDL.h"), _T("SDL's include")))
+        if (!VerifyFile(dir_nomacro_inc, _T("SDL/SDL.h"), _T("SDL's include")))
             return false;
 
         // verify library dependencies
Index: resources/wxwidgets/wizard.script
===================================================================
--- resources/wxwidgets/wizard.script	(revision 6196)
+++ resources/wxwidgets/wizard.script	(working copy)
@@ -56,7 +56,7 @@
 
     if (WizType == wizProject)
     {
-        local intro_msg = _T("Welcome to the new wxWidgets 2.6.x / 2.8.x /2.9.x(CVS)\nproject wizard!\n\n" +
+        local intro_msg = _T("Welcome to the new wxWidgets 2.6.x / 2.8.x /2.9.x(SVN)\nproject wizard!\n\n" +
                             "This wizard will guide you to create a new project using\n" +
                             "the wxWidgets cross-platform GUI library.\n\n" +
                             "When you 're ready to proceed, please click \"Next\"...");
@@ -67,7 +67,7 @@
                                 "\"include\" and \"lib\".");
 
         Wizard.AddInfoPage(_T("WxIntro"), intro_msg);
-        Wizard.AddGenericSingleChoiceListPage(_T("wxVersionPage"), _T("Please select the wxWidgets version you want to use."), _T("wxWidgets 2.6.x;wxWidgets 2.8.x; wxWidgets 2.9.x (CVS Version)"), WxVersion); // select wxwidgets version
+        Wizard.AddGenericSingleChoiceListPage(_T("wxVersionPage"), _T("Please select the wxWidgets version you want to use."), _T("wxWidgets 2.6.x;wxWidgets 2.8.x; wxWidgets 2.9.x (SVN Version)"), WxVersion); // select wxwidgets version
         Wizard.AddProjectPathPage();
         Wizard.AddPage(_T("WxProjDetails"));
         Wizard.AddPage(_T("WxGuiSelect"));
@@ -88,7 +88,7 @@
     }
     else if (WizType == wizTarget)
     {
-        local intro_msg = _T("Welcome to the new wxWidgets 2.6.x / 2.8.x /2.9.x(CVS)\nTarget wizard!\n\n" +
+        local intro_msg = _T("Welcome to the new wxWidgets 2.6.x / 2.8.x /2.9.x(SVN)\nTarget wizard!\n\n" +
                             "This wizard will guide you to create a new target\n" +
                             "When you 're ready to proceed, please click \"Next\"...");
 
@@ -98,7 +98,7 @@
                                 "\"include\" and \"lib\".");
 
         Wizard.AddInfoPage(_T("WxIntro"), intro_msg);
-        Wizard.AddGenericSingleChoiceListPage(_T("wxVersionPage"), _T("Please select the wxWidgets version you want to use."), _T("wxWidgets 2.6.x;wxWidgets 2.8.x; wxWidgets 2.9.x (CVS Version)"), WxVersion); // select wxwidgets version
+        Wizard.AddGenericSingleChoiceListPage(_T("wxVersionPage"), _T("Please select the wxWidgets version you want to use."), _T("wxWidgets 2.6.x;wxWidgets 2.8.x; wxWidgets 2.9.x (SVN Version)"), WxVersion); // select wxwidgets version
         if (PLATFORM == PLATFORM_MSW)
             Wizard.AddGenericSelectPathPage(_T("WxPath"), wxpath_msg, _T("wxWidgets' location:"), _T("$(#wx)"));
         // we need the compiler selection before wx settings, because we 'll have
Index: resources/sfml/wizard.script
===================================================================
--- resources/sfml/wizard.script	(revision 6196)
+++ resources/sfml/wizard.script	(working copy)
@@ -47,17 +47,17 @@
         local dir_nomacro_inc = GetCompilerIncludeDir(dir, SFMLPathDefault, SFMLPathDefaultInc);
         if (dir_nomacro_inc.IsEmpty())
             return false;
-        if (!VerifyFile(dir_nomacro_inc, _T("Audio.hpp"), _T("SFML's include")))
+        if (!VerifyFile(dir_nomacro_inc, _T("SFML/Audio.hpp"), _T("SFML's include")))
             return false;
-        if (!VerifyFile(dir_nomacro_inc, _T("Config.hpp"), _T("SFML's include")))
+        if (!VerifyFile(dir_nomacro_inc, _T("SFML/Config.hpp"), _T("SFML's include")))
             return false;
-        if (!VerifyFile(dir_nomacro_inc, _T("Graphics.hpp"), _T("SFML's include")))
+        if (!VerifyFile(dir_nomacro_inc, _T("SFML/Graphics.hpp"), _T("SFML's include")))
             return false;
-        if (!VerifyFile(dir_nomacro_inc, _T("Network.hpp"), _T("SFML's include")))
+        if (!VerifyFile(dir_nomacro_inc, _T("SFML/Network.hpp"), _T("SFML's include")))
             return false;
-        if (!VerifyFile(dir_nomacro_inc, _T("System.hpp"), _T("SFML's include")))
+        if (!VerifyFile(dir_nomacro_inc, _T("SFML/System.hpp"), _T("SFML's include")))
             return false;
-        if (!VerifyFile(dir_nomacro_inc, _T("Window.hpp"), _T("SFML's include")))
+        if (!VerifyFile(dir_nomacro_inc, _T("SFML/Window.hpp"), _T("SFML's include")))
             return false;
 
         // verify library dependencies
