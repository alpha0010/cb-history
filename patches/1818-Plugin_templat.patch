Index: src/plugins/scriptedwizard/resources/plugins/templates/generic_template.cpp
===================================================================
--- src/plugins/scriptedwizard/resources/plugins/templates/generic_template.cpp	(revision 3474)
+++ src/plugins/scriptedwizard/resources/plugins/templates/generic_template.cpp	(working copy)
@@ -45,8 +45,7 @@
 void [PLUGIN_NAME]::OnRelease(bool appShutDown)
 {
 	// do de-initialization for your plugin
-	// if appShutDown is false, the plugin is unloaded because Code::Blocks is being shut down,
-	// which means you must not use any of the SDK Managers
+	// if appShutDown is true, the plugin is unloaded because Code::Blocks is being shut down.
 	// NOTE: after this function, the inherited member variable
 	// m_IsAttached will be FALSE...
 }
Index: src/plugins/scriptedwizard/resources/plugins/templates/generic_template.h
===================================================================
--- src/plugins/scriptedwizard/resources/plugins/templates/generic_template.h	(revision 3474)
+++ src/plugins/scriptedwizard/resources/plugins/templates/generic_template.h	(working copy)
@@ -111,9 +111,7 @@
 		  * Code::Blocks (PluginManager actually) when the plugin has been
 		  * loaded, attached and should de-attach from Code::Blocks.\n
 		  * Think of this method as the actual destructor...
-		  * @param appShutDown If true, the application is shutting down. In this
-		  *         case *don't* use Manager::Get()->Get...() functions or the
-		  *         behaviour is undefined...
+		  * @param appShutDown If true, the application is shutting down.
 		  */
         virtual void OnRelease(bool appShutDown);
 [IF NEED_EVENTS]
Index: src/plugins/scriptedwizard/resources/plugins/templates/mime_template.cpp
===================================================================
--- src/plugins/scriptedwizard/resources/plugins/templates/mime_template.cpp	(revision 3474)
+++ src/plugins/scriptedwizard/resources/plugins/templates/mime_template.cpp	(working copy)
@@ -39,8 +39,7 @@
 void [PLUGIN_NAME]::OnRelease(bool appShutDown)
 {
 	// do de-initialization for your plugin
-	// if appShutDown is false, the plugin is unloaded because Code::Blocks is being shut down,
-	// which means you must not use any of the SDK Managers
+	// if appShutDown is true, the plugin is unloaded because Code::Blocks is being shut down.
 	// NOTE: after this function, the inherited member variable
 	// m_IsAttached will be FALSE...
 }
Index: src/plugins/scriptedwizard/resources/plugins/templates/mime_template.h
===================================================================
--- src/plugins/scriptedwizard/resources/plugins/templates/mime_template.h	(revision 3474)
+++ src/plugins/scriptedwizard/resources/plugins/templates/mime_template.h	(working copy)
@@ -101,9 +101,7 @@
 		  * Code::Blocks (PluginManager actually) when the plugin has been
 		  * loaded, attached and should de-attach from Code::Blocks.\n
 		  * Think of this method as the actual destructor...
-		  * @param appShutDown If true, the application is shutting down. In this
-		  *         case *don't* use Manager::Get()->Get...() functions or the
-		  *         behaviour is undefined...
+		  * @param appShutDown If true, the application is shutting down.
 		  */
         virtual void OnRelease(bool appShutDown);
 };
Index: src/plugins/scriptedwizard/resources/plugins/templates/tool_template.cpp
===================================================================
--- src/plugins/scriptedwizard/resources/plugins/templates/tool_template.cpp	(revision 3474)
+++ src/plugins/scriptedwizard/resources/plugins/templates/tool_template.cpp	(working copy)
@@ -39,8 +39,7 @@
 void [PLUGIN_NAME]::OnRelease(bool appShutDown)
 {
 	// do de-initialization for your plugin
-	// if appShutDown is false, the plugin is unloaded because Code::Blocks is being shut down,
-	// which means you must not use any of the SDK Managers
+	// if appShutDown is true, the plugin is unloaded because Code::Blocks is being shut down.
 	// NOTE: after this function, the inherited member variable
 	// m_IsAttached will be FALSE...
 }
Index: src/plugins/scriptedwizard/resources/plugins/templates/tool_template.h
===================================================================
--- src/plugins/scriptedwizard/resources/plugins/templates/tool_template.h	(revision 3474)
+++ src/plugins/scriptedwizard/resources/plugins/templates/tool_template.h	(working copy)
@@ -83,9 +83,7 @@
 		  * Code::Blocks (PluginManager actually) when the plugin has been
 		  * loaded, attached and should de-attach from Code::Blocks.\n
 		  * Think of this method as the actual destructor...
-		  * @param appShutDown If true, the application is shutting down. In this
-		  *         case *don't* use Manager::Get()->Get...() functions or the
-		  *         behaviour is undefined...
+		  * @param appShutDown If true, the application is shutting down.
 		  */
         virtual void OnRelease(bool appShutDown);
 };
Index: src/plugins/scriptedwizard/resources/plugins/templates/wizard_template.cpp
===================================================================
--- src/plugins/scriptedwizard/resources/plugins/templates/wizard_template.cpp	(revision 3474)
+++ src/plugins/scriptedwizard/resources/plugins/templates/wizard_template.cpp	(working copy)
@@ -39,8 +39,7 @@
 void [PLUGIN_NAME]::OnRelease(bool appShutDown)
 {
 	// do de-initialization for your plugin
-	// if appShutDown is false, the plugin is unloaded because Code::Blocks is being shut down,
-	// which means you must not use any of the SDK Managers
+	// if appShutDown is true, the plugin is unloaded because Code::Blocks is being shut down.
 	// NOTE: after this function, the inherited member variable
 	// m_IsAttached will be FALSE...
 }
Index: src/plugins/scriptedwizard/resources/plugins/templates/wizard_template.h
===================================================================
--- src/plugins/scriptedwizard/resources/plugins/templates/wizard_template.h	(revision 3474)
+++ src/plugins/scriptedwizard/resources/plugins/templates/wizard_template.h	(working copy)
@@ -113,9 +113,7 @@
 		  * Code::Blocks (PluginManager actually) when the plugin has been
 		  * loaded, attached and should de-attach from Code::Blocks.\n
 		  * Think of this method as the actual destructor...
-		  * @param appShutDown If true, the application is shutting down. In this
-		  *         case *don't* use Manager::Get()->Get...() functions or the
-		  *         behaviour is undefined...
+		  * @param appShutDown If true, the application is shutting down.
 		  */
         virtual void OnRelease(bool appShutDown);
 
